{"version":3,"sources":["../src/preact.js","../src/vnode.js","../src/options.js","../src/h.js","../src/util.js","../src/clone-element.js","../src/constants.js","../src/render-queue.js","../src/vdom/index.js","../src/dom/index.js","../src/vdom/diff.js","../src/vdom/component-recycler.js","../src/vdom/component.js","../src/component.js","../src/render.js","services/WeatherService.js","services/GeoService.js","components/Card/index.jsx","components/CardHeader.jsx","components/CardTitle.jsx","components/CardLoading.jsx","components/WeatherRow/index.jsx","components/CardInner.jsx","components/WeatherViewMore.jsx","services/PubSub.js","services/Constants.js","views/Weather/index.jsx","services/TubeService.js","components/TubeRow/index.jsx","views/Tube/index.jsx","services/RailService.js","services/QueryString.js","components/RailMessages.jsx","components/RailFromTo/index.jsx","components/RailRow.jsx","views/Rail/index.jsx","components/Modal/StationSelector/index.jsx","components/Modal/index.jsx","index.jsx"],"names":["VNode","options","stack","EMPTY_CHILDREN","h","nodeName","attributes","children","lastSimple","child","simple","i","arguments","length","push","pop","undefined","String","p","key","vnode","extend","obj","props","applyRef","ref","value","current","defer","Promise","resolve","then","bind","setTimeout","cloneElement","slice","call","NO_RENDER","SYNC_RENDER","FORCE_RENDER","ASYNC_RENDER","IS_NON_DIMENSIONAL","items","isSameNodeType","node","_componentConstructor","isNamedNode","normalizedNodeName","defaultProps","document","createElementNS","removeNode","parentNode","setAccessor","old","name","style","innerHTML","__html","useCapture","_listeners","removeChild","ns","eventProxy","mounts","diffLevel","hydrating","flushMounts","c","shift","ret","parent","componentRoot","prevSvgMode","ATTR_KEY","out","buildComponentFromVNode","vnodeName","dom","firstChild","appendChild","nodeValue","vchildren","context","mountAll","originalChildren","keyed","min","len","childrenLen","vlen","j","f","vchild","keyedLen","component","unmountOnly","next","previousSibling","diffAttributes","attrs","recyclerComponents","createComponent","Ctor","prototype","constructor","nextBase","doRender","setComponentProps","_disable","componentWillReceiveProps","prevContext","renderMode","syncComponentUpdates","previousProps","previousState","__ref","renderComponent","state","isUpdate","base","initialBase","snapshot","rendered","inst","cbase","shouldComponentUpdate","prevProps","_dirty","render","getSnapshotBeforeUpdate","childComponent","childProps","getNodeProps","initialChildComponent","baseParent","replaceChild","_component","toUnmount","componentRef","t","afterUpdate","_renderCallbacks","isChild","originalComponent","oldDom","isOwner","beforeUnmount","componentWillUnmount","callback","diff","merge","createRef","getWeatherData","coords","reject","fetch","response","json","catch","positionToObject","position","lat","latitude","lon","longitude","getGeoPosition","navigator","geolocation","getCurrentPosition","enableHighAccuracy","timeout","maximumAge","Card","classes","className","join","CardHeader","styling","marginBottom","Object","assign","CardTitle","fontWeight","color","CardLoading","WeatherRow","row","hourOfWeather","hour","feelsLike","windSpeed","condition","CardInner","borderRadius","background","boxShadow","withPadding","padding","WeatherViewMore","top","right","isVisible","display","onClick","emitter","subscribe","on","publish","emit","STATION_SELECT_OPEN","STATION_SELECT_CLOSE","STATION_SELECT","REFRESH","Weather","Component","weather","limit","increaseLimit","getGeoData","componentDidMount","Constants","setState","data","event","preventDefault","hasData","shouldShowViewMore","weatherRows","overflowX","map","getTubeData","line","disruption","Tube","tube","getData","STATIONS","getRailData","from","to","newCoords","getStationsList","keys","filterStationsList","filterString","foundEntries","searchString","toLowerCase","entries","forEach","entry","title","score","includes","startsWith","toReturn","sort","a","b","element","objectToReturn","filter","values","parse","window","location","search","substring","split","queryStringParameter","addOrUpdateQueryString","parsed","encoded","k","v","history","pushState","path","RailMessages","messages","RailFromTo","fromName","toName","showStationSelector","switchDirection","nextProps","station","stationToChange","RailRow","getStatus","cancelReason","etd","getStatusText","delayReason","std","platform","departureTime","trainStatus","Rail","rail","getGeoRailData","overrides","QueryString","renderRailTimes","railRows","times","hasItems","shouldShowMessages","metadata","meta","stationsList","StationSelector","onSearch","onStationSelect","closeModal","escapeListener","addEventListener","getElementById","focus","removeEventListener","target","stationCode","keyCode","id","filtered","RailService","code","Modal","modals","removeModal","lockScrolling","unlockScrolling","newModals","modalKey","getElementsByTagName","overflow","Root","PubSub","lastChild"],"mappings":"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","file":"index.map","sourceRoot":"../src","sourcesContent":["import { h, h as createElement } from './h';\nimport { cloneElement } from './clone-element';\nimport { Component } from './component';\nimport { render } from './render';\nimport { rerender } from './render-queue';\nimport options from './options';\n\nfunction createRef() {\n\treturn {};\n}\n\nexport default {\n\th,\n\tcreateElement,\n\tcloneElement,\n\tcreateRef,\n\tComponent,\n\trender,\n\trerender,\n\toptions\n};\n\nexport {\n\th,\n\tcreateElement,\n\tcloneElement,\n\tcreateRef,\n\tComponent,\n\trender,\n\trerender,\n\toptions\n};\n","/**\n * Virtual DOM Node\n * @typedef VNode\n * @property {string | function} nodeName The string of the DOM node to create or Component constructor to render\n * @property {Array<VNode | string>} children The children of node\n * @property {string | number | undefined} key The key used to identify this VNode in a list\n * @property {object} attributes The properties of this VNode\n */\nexport const VNode = function VNode() {};\n","/**\n * @typedef {import('./component').Component} Component\n * @typedef {import('./vnode').VNode} VNode\n */\n\n/**\n * Global options\n * @public\n * @typedef Options\n * @property {boolean} [syncComponentUpdates] If `true`, `prop` changes trigger synchronous component updates. Defaults to true.\n * @property {(vnode: VNode) => void} [vnode] Processes all created VNodes.\n * @property {(component: Component) => void} [afterMount] Hook invoked after a component is mounted.\n * @property {(component: Component) => void} [afterUpdate] Hook invoked after the DOM is updated with a component's latest render.\n * @property {(component: Component) => void} [beforeUnmount] Hook invoked immediately before a component is unmounted.\n * @property {(rerender: function) => void} [debounceRendering] Hook invoked whenever a rerender is requested. Can be used to debounce rerenders.\n * @property {(event: Event) => Event | void} [event] Hook invoked before any Preact event listeners. The return value (if any) replaces the native browser event given to event listeners\n */\n\n/** @type {Options}  */\nconst options = {};\n\nexport default options;\n","import { VNode } from './vnode';\nimport options from './options';\n\n\nconst stack = [];\n\nconst EMPTY_CHILDREN = [];\n\n/**\n * JSX/hyperscript reviver.\n * @see http://jasonformat.com/wtf-is-jsx\n * Benchmarks: https://esbench.com/bench/57ee8f8e330ab09900a1a1a0\n *\n * Note: this is exported as both `h()` and `createElement()` for compatibility\n * reasons.\n *\n * Creates a VNode (virtual DOM element). A tree of VNodes can be used as a\n * lightweight representation of the structure of a DOM tree. This structure can\n * be realized by recursively comparing it against the current _actual_ DOM\n * structure, and applying only the differences.\n *\n * `h()`/`createElement()` accepts an element name, a list of attributes/props,\n * and optionally children to append to the element.\n *\n * @example The following DOM tree\n *\n * `<div id=\"foo\" name=\"bar\">Hello!</div>`\n *\n * can be constructed using this function as:\n *\n * `h('div', { id: 'foo', name : 'bar' }, 'Hello!');`\n *\n * @param {string | function} nodeName An element name. Ex: `div`, `a`, `span`, etc.\n * @param {object | null} attributes Any attributes/props to set on the created element.\n * @param {VNode[]} [rest] Additional arguments are taken to be children to\n *  append. Can be infinitely nested Arrays.\n *\n * @public\n */\nexport function h(nodeName, attributes) {\n\tlet children=EMPTY_CHILDREN, lastSimple, child, simple, i;\n\tfor (i=arguments.length; i-- > 2; ) {\n\t\tstack.push(arguments[i]);\n\t}\n\tif (attributes && attributes.children!=null) {\n\t\tif (!stack.length) stack.push(attributes.children);\n\t\tdelete attributes.children;\n\t}\n\twhile (stack.length) {\n\t\tif ((child = stack.pop()) && child.pop!==undefined) {\n\t\t\tfor (i=child.length; i--; ) stack.push(child[i]);\n\t\t}\n\t\telse {\n\t\t\tif (typeof child==='boolean') child = null;\n\n\t\t\tif ((simple = typeof nodeName!=='function')) {\n\t\t\t\tif (child==null) child = '';\n\t\t\t\telse if (typeof child==='number') child = String(child);\n\t\t\t\telse if (typeof child!=='string') simple = false;\n\t\t\t}\n\n\t\t\tif (simple && lastSimple) {\n\t\t\t\tchildren[children.length-1] += child;\n\t\t\t}\n\t\t\telse if (children===EMPTY_CHILDREN) {\n\t\t\t\tchildren = [child];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tchildren.push(child);\n\t\t\t}\n\n\t\t\tlastSimple = simple;\n\t\t}\n\t}\n\n\tlet p = new VNode();\n\tp.nodeName = nodeName;\n\tp.children = children;\n\tp.attributes = attributes==null ? undefined : attributes;\n\tp.key = attributes==null ? undefined : attributes.key;\n\n\t// if a \"vnode hook\" is defined, pass every created VNode to it\n\tif (options.vnode!==undefined) options.vnode(p);\n\n\treturn p;\n}\n","/**\n * Copy all properties from `props` onto `obj`.\n * @param {object} obj Object onto which properties should be copied.\n * @param {object} props Object from which to copy properties.\n * @returns {object}\n * @private\n */\nexport function extend(obj, props) {\n\tfor (let i in props) obj[i] = props[i];\n\treturn obj;\n}\n\n/** Invoke or update a ref, depending on whether it is a function or object ref.\n *  @param {object|function} [ref=null]\n *  @param {any} [value]\n */\nexport function applyRef(ref, value) {\n\tif (ref!=null) {\n\t\tif (typeof ref=='function') ref(value);\n\t\telse ref.current = value;\n\t}\n}\n\n/**\n * Call a function asynchronously, as soon as possible. Makes\n * use of HTML Promise to schedule the callback if available,\n * otherwise falling back to `setTimeout` (mainly for IE<11).\n * @type {(callback: function) => void}\n */\nexport const defer = typeof Promise=='function' ? Promise.resolve().then.bind(Promise.resolve()) : setTimeout;\n","import { extend } from './util';\nimport { h } from './h';\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its\n * children.\n * @param {import('./vnode').VNode} vnode The virtual DOM element to clone\n * @param {object} props Attributes/props to add when cloning\n * @param {Array<import('./vnode').VNode>} [rest] Any additional arguments will be used as replacement\n *  children.\n */\nexport function cloneElement(vnode, props) {\n\treturn h(\n\t\tvnode.nodeName,\n\t\textend(extend({}, vnode.attributes), props),\n\t\targuments.length>2 ? [].slice.call(arguments, 2) : vnode.children\n\t);\n}\n","// render modes\n\n/** Do not re-render a component */\nexport const NO_RENDER = 0;\n/** Synchronously re-render a component and its children */\nexport const SYNC_RENDER = 1;\n/** Synchronously re-render a component, even if its lifecycle methods attempt to prevent it. */\nexport const FORCE_RENDER = 2;\n/** Queue asynchronous re-render of a component and it's children */\nexport const ASYNC_RENDER = 3;\n\n\nexport const ATTR_KEY = '__preactattr_';\n\n/** DOM properties that should NOT have \"px\" added when numeric */\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|ows|mnc|ntw|ine[ch]|zoo|^ord/i;\n\n","import options from './options';\nimport { defer } from './util';\nimport { renderComponent } from './vdom/component';\n\n/**\n * Managed queue of dirty components to be re-rendered\n * @type {Array<import('./component').Component>}\n */\nlet items = [];\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./component').Component} component The component to rerender\n */\nexport function enqueueRender(component) {\n\tif (!component._dirty && (component._dirty = true) && items.push(component)==1) {\n\t\t(options.debounceRendering || defer)(rerender);\n\t}\n}\n\n/** Rerender all enqueued dirty components */\nexport function rerender() {\n\tlet p;\n\twhile ( (p = items.pop()) ) {\n\t\tif (p._dirty) renderComponent(p);\n\t}\n}\n","import { extend } from '../util';\n\n\n/**\n * Check if two nodes are equivalent.\n * @param {import('../dom').PreactElement} node DOM Node to compare\n * @param {import('../vnode').VNode} vnode Virtual DOM node to compare\n * @param {boolean} [hydrating=false] If true, ignores component constructors\n *  when comparing.\n * @private\n */\nexport function isSameNodeType(node, vnode, hydrating) {\n\tif (typeof vnode==='string' || typeof vnode==='number') {\n\t\treturn node.splitText!==undefined;\n\t}\n\tif (typeof vnode.nodeName==='string') {\n\t\treturn !node._componentConstructor && isNamedNode(node, vnode.nodeName);\n\t}\n\treturn hydrating || node._componentConstructor===vnode.nodeName;\n}\n\n\n/**\n * Check if an Element has a given nodeName, case-insensitively.\n * @param {import('../dom').PreactElement} node A DOM Element to inspect the name of.\n * @param {string} nodeName Unnormalized name to compare against.\n */\nexport function isNamedNode(node, nodeName) {\n\treturn node.normalizedNodeName===nodeName || node.nodeName.toLowerCase()===nodeName.toLowerCase();\n}\n\n\n/**\n * Reconstruct Component-style `props` from a VNode.\n * Ensures default/fallback values from `defaultProps`:\n * Own-properties of `defaultProps` not present in `vnode.attributes` are added.\n * @param {import('../vnode').VNode} vnode The VNode to get props for\n * @returns {object} The props to use for this VNode\n */\nexport function getNodeProps(vnode) {\n\tlet props = extend({}, vnode.attributes);\n\tprops.children = vnode.children;\n\n\tlet defaultProps = vnode.nodeName.defaultProps;\n\tif (defaultProps!==undefined) {\n\t\tfor (let i in defaultProps) {\n\t\t\tif (props[i]===undefined) {\n\t\t\t\tprops[i] = defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn props;\n}\n","import { IS_NON_DIMENSIONAL } from '../constants';\nimport { applyRef } from '../util';\nimport options from '../options';\n\n/**\n * A DOM event listener\n * @typedef {(e: Event) => void} EventListner\n */\n\n/**\n * A mapping of event types to event listeners\n * @typedef {Object.<string, EventListener>} EventListenerMap\n */\n\n/**\n * Properties Preact adds to elements it creates\n * @typedef PreactElementExtensions\n * @property {string} [normalizedNodeName] A normalized node name to use in diffing\n * @property {EventListenerMap} [_listeners] A map of event listeners added by components to this DOM node\n * @property {import('../component').Component} [_component] The component that rendered this DOM node\n * @property {function} [_componentConstructor] The constructor of the component that rendered this DOM node\n */\n\n/**\n * A DOM element that has been extended with Preact properties\n * @typedef {Element & ElementCSSInlineStyle & PreactElementExtensions} PreactElement\n */\n\n/**\n * Create an element with the given nodeName.\n * @param {string} nodeName The DOM node to create\n * @param {boolean} [isSvg=false] If `true`, creates an element within the SVG\n *  namespace.\n * @returns {PreactElement} The created DOM node\n */\nexport function createNode(nodeName, isSvg) {\n\t/** @type {PreactElement} */\n\tlet node = isSvg ? document.createElementNS('http://www.w3.org/2000/svg', nodeName) : document.createElement(nodeName);\n\tnode.normalizedNodeName = nodeName;\n\treturn node;\n}\n\n\n/**\n * Remove a child node from its parent if attached.\n * @param {Node} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\n\n/**\n * Set a named attribute on the given Node, with special behavior for some names\n * and event handlers. If `value` is `null`, the attribute/handler will be\n * removed.\n * @param {PreactElement} node An element to mutate\n * @param {string} name The name/key to set, such as an event or attribute name\n * @param {*} old The last value that was set for this name/node pair\n * @param {*} value An attribute value, such as a function to be used as an\n *  event handler\n * @param {boolean} isSvg Are we currently diffing inside an svg?\n * @private\n */\nexport function setAccessor(node, name, old, value, isSvg) {\n\tif (name==='className') name = 'class';\n\n\n\tif (name==='key') {\n\t\t// ignore\n\t}\n\telse if (name==='ref') {\n\t\tapplyRef(old, null);\n\t\tapplyRef(value, node);\n\t}\n\telse if (name==='class' && !isSvg) {\n\t\tnode.className = value || '';\n\t}\n\telse if (name==='style') {\n\t\tif (!value || typeof value==='string' || typeof old==='string') {\n\t\t\tnode.style.cssText = value || '';\n\t\t}\n\t\tif (value && typeof value==='object') {\n\t\t\tif (typeof old!=='string') {\n\t\t\t\tfor (let i in old) if (!(i in value)) node.style[i] = '';\n\t\t\t}\n\t\t\tfor (let i in value) {\n\t\t\t\tnode.style[i] = typeof value[i]==='number' && IS_NON_DIMENSIONAL.test(i)===false ? (value[i]+'px') : value[i];\n\t\t\t}\n\t\t}\n\t}\n\telse if (name==='dangerouslySetInnerHTML') {\n\t\tif (value) node.innerHTML = value.__html || '';\n\t}\n\telse if (name[0]=='o' && name[1]=='n') {\n\t\tlet useCapture = name !== (name=name.replace(/Capture$/, ''));\n\t\tname = name.toLowerCase().substring(2);\n\t\tif (value) {\n\t\t\tif (!old) node.addEventListener(name, eventProxy, useCapture);\n\t\t}\n\t\telse {\n\t\t\tnode.removeEventListener(name, eventProxy, useCapture);\n\t\t}\n\t\t(node._listeners || (node._listeners = {}))[name] = value;\n\t}\n\telse if (name!=='list' && name!=='type' && !isSvg && name in node) {\n\t\t// Attempt to set a DOM property to the given value.\n\t\t// IE & FF throw for certain property-value combinations.\n\t\ttry {\n\t\t\tnode[name] = value==null ? '' : value;\n\t\t} catch (e) { }\n\t\tif ((value==null || value===false) && name!='spellcheck') node.removeAttribute(name);\n\t}\n\telse {\n\t\tlet ns = isSvg && (name !== (name = name.replace(/^xlink:?/, '')));\n\t\t// spellcheck is treated differently than all other boolean values and\n\t\t// should not be removed when the value is `false`. See:\n\t\t// https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-spellcheck\n\t\tif (value==null || value===false) {\n\t\t\tif (ns) node.removeAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase());\n\t\t\telse node.removeAttribute(name);\n\t\t}\n\t\telse if (typeof value!=='function') {\n\t\t\tif (ns) node.setAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase(), value);\n\t\t\telse node.setAttribute(name, value);\n\t\t}\n\t}\n}\n\n\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\treturn this._listeners[e.type](options.event && options.event(e) || e);\n}\n","import { ATTR_KEY } from '../constants';\nimport { isSameNodeType, isNamedNode } from './index';\nimport { buildComponentFromVNode } from './component';\nimport { createNode, setAccessor } from '../dom/index';\nimport { unmountComponent } from './component';\nimport options from '../options';\nimport { applyRef } from '../util';\nimport { removeNode } from '../dom/index';\n\n/**\n * Queue of components that have been mounted and are awaiting componentDidMount\n * @type {Array<import('../component').Component>}\n */\nexport const mounts = [];\n\n/** Diff recursion count, used to track the end of the diff cycle. */\nexport let diffLevel = 0;\n\n/** Global flag indicating if the diff is currently within an SVG */\nlet isSvgMode = false;\n\n/** Global flag indicating if the diff is performing hydration */\nlet hydrating = false;\n\n/** Invoke queued componentDidMount lifecycle methods */\nexport function flushMounts() {\n\tlet c;\n\twhile ((c = mounts.shift())) {\n\t\tif (options.afterMount) options.afterMount(c);\n\t\tif (c.componentDidMount) c.componentDidMount();\n\t}\n}\n\n\n/**\n * Apply differences in a given vnode (and it's deep children) to a real DOM Node.\n * @param {import('../dom').PreactElement} dom A DOM node to mutate into the shape of a `vnode`\n * @param {import('../vnode').VNode} vnode A VNode (with descendants forming a tree) representing\n *  the desired DOM structure\n * @param {object} context The current context\n * @param {boolean} mountAll Whether or not to immediately mount all components\n * @param {Element} parent ?\n * @param {boolean} componentRoot ?\n * @returns {import('../dom').PreactElement} The created/mutated element\n * @private\n */\nexport function diff(dom, vnode, context, mountAll, parent, componentRoot) {\n\t// diffLevel having been 0 here indicates initial entry into the diff (not a subdiff)\n\tif (!diffLevel++) {\n\t\t// when first starting the diff, check if we're diffing an SVG or within an SVG\n\t\tisSvgMode = parent!=null && parent.ownerSVGElement!==undefined;\n\n\t\t// hydration is indicated by the existing element to be diffed not having a prop cache\n\t\thydrating = dom!=null && !(ATTR_KEY in dom);\n\t}\n\n\tlet ret = idiff(dom, vnode, context, mountAll, componentRoot);\n\n\t// append the element if its a new parent\n\tif (parent && ret.parentNode!==parent) parent.appendChild(ret);\n\n\t// diffLevel being reduced to 0 means we're exiting the diff\n\tif (!--diffLevel) {\n\t\thydrating = false;\n\t\t// invoke queued componentDidMount lifecycle methods\n\t\tif (!componentRoot) flushMounts();\n\t}\n\n\treturn ret;\n}\n\n\n/**\n * Internals of `diff()`, separated to allow bypassing diffLevel / mount flushing.\n * @param {import('../dom').PreactElement} dom A DOM node to mutate into the shape of a `vnode`\n * @param {import('../vnode').VNode} vnode A VNode (with descendants forming a tree) representing the desired DOM structure\n * @param {object} context The current context\n * @param {boolean} mountAll Whether or not to immediately mount all components\n * @param {boolean} [componentRoot] ?\n * @private\n */\nfunction idiff(dom, vnode, context, mountAll, componentRoot) {\n\tlet out = dom,\n\t\tprevSvgMode = isSvgMode;\n\n\t// empty values (null, undefined, booleans) render as empty Text nodes\n\tif (vnode==null || typeof vnode==='boolean') vnode = '';\n\n\n\t// Fast case: Strings & Numbers create/update Text nodes.\n\tif (typeof vnode==='string' || typeof vnode==='number') {\n\n\t\t// update if it's already a Text node:\n\t\tif (dom && dom.splitText!==undefined && dom.parentNode && (!dom._component || componentRoot)) {\n\t\t\t/* istanbul ignore if */ /* Browser quirk that can't be covered: https://github.com/developit/preact/commit/fd4f21f5c45dfd75151bd27b4c217d8003aa5eb9 */\n\t\t\tif (dom.nodeValue!=vnode) {\n\t\t\t\tdom.nodeValue = vnode;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// it wasn't a Text node: replace it with one and recycle the old Element\n\t\t\tout = document.createTextNode(vnode);\n\t\t\tif (dom) {\n\t\t\t\tif (dom.parentNode) dom.parentNode.replaceChild(out, dom);\n\t\t\t\trecollectNodeTree(dom, true);\n\t\t\t}\n\t\t}\n\n\t\tout[ATTR_KEY] = true;\n\n\t\treturn out;\n\t}\n\n\n\t// If the VNode represents a Component, perform a component diff:\n\tlet vnodeName = vnode.nodeName;\n\tif (typeof vnodeName==='function') {\n\t\treturn buildComponentFromVNode(dom, vnode, context, mountAll);\n\t}\n\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tisSvgMode = vnodeName==='svg' ? true : vnodeName==='foreignObject' ? false : isSvgMode;\n\n\n\t// If there's no existing element or it's the wrong type, create a new one:\n\tvnodeName = String(vnodeName);\n\tif (!dom || !isNamedNode(dom, vnodeName)) {\n\t\tout = createNode(vnodeName, isSvgMode);\n\n\t\tif (dom) {\n\t\t\t// move children into the replacement node\n\t\t\twhile (dom.firstChild) out.appendChild(dom.firstChild);\n\n\t\t\t// if the previous Element was mounted into the DOM, replace it inline\n\t\t\tif (dom.parentNode) dom.parentNode.replaceChild(out, dom);\n\n\t\t\t// recycle the old element (skips non-Element node types)\n\t\t\trecollectNodeTree(dom, true);\n\t\t}\n\t}\n\n\n\tlet fc = out.firstChild,\n\t\tprops = out[ATTR_KEY],\n\t\tvchildren = vnode.children;\n\n\tif (props==null) {\n\t\tprops = out[ATTR_KEY] = {};\n\t\tfor (let a=out.attributes, i=a.length; i--; ) props[a[i].name] = a[i].value;\n\t}\n\n\t// Optimization: fast-path for elements containing a single TextNode:\n\tif (!hydrating && vchildren && vchildren.length===1 && typeof vchildren[0]==='string' && fc!=null && fc.splitText!==undefined && fc.nextSibling==null) {\n\t\tif (fc.nodeValue!=vchildren[0]) {\n\t\t\tfc.nodeValue = vchildren[0];\n\t\t}\n\t}\n\t// otherwise, if there are existing or new children, diff them:\n\telse if (vchildren && vchildren.length || fc!=null) {\n\t\tinnerDiffNode(out, vchildren, context, mountAll, hydrating || props.dangerouslySetInnerHTML!=null);\n\t}\n\n\n\t// Apply attributes/props from VNode to the DOM Element:\n\tdiffAttributes(out, vnode.attributes, props);\n\n\n\t// restore previous SVG mode: (in case we're exiting an SVG namespace)\n\tisSvgMode = prevSvgMode;\n\n\treturn out;\n}\n\n\n/**\n * Apply child and attribute changes between a VNode and a DOM Node to the DOM.\n * @param {import('../dom').PreactElement} dom Element whose children should be compared & mutated\n * @param {Array<import('../vnode').VNode>} vchildren Array of VNodes to compare to `dom.childNodes`\n * @param {object} context Implicitly descendant context object (from most\n *  recent `getChildContext()`)\n * @param {boolean} mountAll Whether or not to immediately mount all components\n * @param {boolean} isHydrating if `true`, consumes externally created elements\n *  similar to hydration\n */\nfunction innerDiffNode(dom, vchildren, context, mountAll, isHydrating) {\n\tlet originalChildren = dom.childNodes,\n\t\tchildren = [],\n\t\tkeyed = {},\n\t\tkeyedLen = 0,\n\t\tmin = 0,\n\t\tlen = originalChildren.length,\n\t\tchildrenLen = 0,\n\t\tvlen = vchildren ? vchildren.length : 0,\n\t\tj, c, f, vchild, child;\n\n\t// Build up a map of keyed children and an Array of unkeyed children:\n\tif (len!==0) {\n\t\tfor (let i=0; i<len; i++) {\n\t\t\tlet child = originalChildren[i],\n\t\t\t\tprops = child[ATTR_KEY],\n\t\t\t\tkey = vlen && props ? child._component ? child._component.__key : props.key : null;\n\t\t\tif (key!=null) {\n\t\t\t\tkeyedLen++;\n\t\t\t\tkeyed[key] = child;\n\t\t\t}\n\t\t\telse if (props || (child.splitText!==undefined ? (isHydrating ? child.nodeValue.trim() : true) : isHydrating)) {\n\t\t\t\tchildren[childrenLen++] = child;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (vlen!==0) {\n\t\tfor (let i=0; i<vlen; i++) {\n\t\t\tvchild = vchildren[i];\n\t\t\tchild = null;\n\n\t\t\t// attempt to find a node based on key matching\n\t\t\tlet key = vchild.key;\n\t\t\tif (key!=null) {\n\t\t\t\tif (keyedLen && keyed[key]!==undefined) {\n\t\t\t\t\tchild = keyed[key];\n\t\t\t\t\tkeyed[key] = undefined;\n\t\t\t\t\tkeyedLen--;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// attempt to pluck a node of the same type from the existing children\n\t\t\telse if (min<childrenLen) {\n\t\t\t\tfor (j=min; j<childrenLen; j++) {\n\t\t\t\t\tif (children[j]!==undefined && isSameNodeType(c = children[j], vchild, isHydrating)) {\n\t\t\t\t\t\tchild = c;\n\t\t\t\t\t\tchildren[j] = undefined;\n\t\t\t\t\t\tif (j===childrenLen-1) childrenLen--;\n\t\t\t\t\t\tif (j===min) min++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// morph the matched/found/created DOM child to match vchild (deep)\n\t\t\tchild = idiff(child, vchild, context, mountAll);\n\n\t\t\tf = originalChildren[i];\n\t\t\tif (child && child!==dom && child!==f) {\n\t\t\t\tif (f==null) {\n\t\t\t\t\tdom.appendChild(child);\n\t\t\t\t}\n\t\t\t\telse if (child===f.nextSibling) {\n\t\t\t\t\tremoveNode(f);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdom.insertBefore(child, f);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\t// remove unused keyed children:\n\tif (keyedLen) {\n\t\tfor (let i in keyed) if (keyed[i]!==undefined) recollectNodeTree(keyed[i], false);\n\t}\n\n\t// remove orphaned unkeyed children:\n\twhile (min<=childrenLen) {\n\t\tif ((child = children[childrenLen--])!==undefined) recollectNodeTree(child, false);\n\t}\n}\n\n\n\n/**\n * Recursively recycle (or just unmount) a node and its descendants.\n * @param {import('../dom').PreactElement} node DOM node to start\n *  unmount/removal from\n * @param {boolean} [unmountOnly=false] If `true`, only triggers unmount\n *  lifecycle, skips removal\n */\nexport function recollectNodeTree(node, unmountOnly) {\n\tlet component = node._component;\n\tif (component) {\n\t\t// if node is owned by a Component, unmount that component (ends up recursing back here)\n\t\tunmountComponent(component);\n\t}\n\telse {\n\t\t// If the node's VNode had a ref function, invoke it with null here.\n\t\t// (this is part of the React spec, and smart for unsetting references)\n\t\tif (node[ATTR_KEY]!=null) applyRef(node[ATTR_KEY].ref, null);\n\n\t\tif (unmountOnly===false || node[ATTR_KEY]==null) {\n\t\t\tremoveNode(node);\n\t\t}\n\n\t\tremoveChildren(node);\n\t}\n}\n\n\n/**\n * Recollect/unmount all children.\n *\t- we use .lastChild here because it causes less reflow than .firstChild\n *\t- it's also cheaper than accessing the .childNodes Live NodeList\n */\nexport function removeChildren(node) {\n\tnode = node.lastChild;\n\twhile (node) {\n\t\tlet next = node.previousSibling;\n\t\trecollectNodeTree(node, true);\n\t\tnode = next;\n\t}\n}\n\n\n/**\n * Apply differences in attributes from a VNode to the given DOM Element.\n * @param {import('../dom').PreactElement} dom Element with attributes to diff `attrs` against\n * @param {object} attrs The desired end-state key-value attribute pairs\n * @param {object} old Current/previous attributes (from previous VNode or\n *  element's prop cache)\n */\nfunction diffAttributes(dom, attrs, old) {\n\tlet name;\n\n\t// remove attributes no longer present on the vnode by setting them to undefined\n\tfor (name in old) {\n\t\tif (!(attrs && attrs[name]!=null) && old[name]!=null) {\n\t\t\tsetAccessor(dom, name, old[name], old[name] = undefined, isSvgMode);\n\t\t}\n\t}\n\n\t// add new & update changed attributes\n\tfor (name in attrs) {\n\t\tif (name!=='children' && name!=='innerHTML' && (!(name in old) || attrs[name]!==(name==='value' || name==='checked' ? dom[name] : old[name]))) {\n\t\t\tsetAccessor(dom, name, old[name], old[name] = attrs[name], isSvgMode);\n\t\t}\n\t}\n}\n","import { Component } from '../component';\n\n/**\n * Retains a pool of Components for re-use.\n * @type {Component[]}\n * @private\n */\nexport const recyclerComponents = [];\n\n\n/**\n * Create a component. Normalizes differences between PFC's and classful\n * Components.\n * @param {function} Ctor The constructor of the component to create\n * @param {object} props The initial props of the component\n * @param {object} context The initial context of the component\n * @returns {import('../component').Component}\n */\nexport function createComponent(Ctor, props, context) {\n\tlet inst, i = recyclerComponents.length;\n\n\tif (Ctor.prototype && Ctor.prototype.render) {\n\t\tinst = new Ctor(props, context);\n\t\tComponent.call(inst, props, context);\n\t}\n\telse {\n\t\tinst = new Component(props, context);\n\t\tinst.constructor = Ctor;\n\t\tinst.render = doRender;\n\t}\n\n\n\twhile (i--) {\n\t\tif (recyclerComponents[i].constructor===Ctor) {\n\t\t\tinst.nextBase = recyclerComponents[i].nextBase;\n\t\t\trecyclerComponents.splice(i, 1);\n\t\t\treturn inst;\n\t\t}\n\t}\n\n\treturn inst;\n}\n\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n","import { SYNC_RENDER, NO_RENDER, FORCE_RENDER, ASYNC_RENDER, ATTR_KEY } from '../constants';\nimport options from '../options';\nimport { extend, applyRef } from '../util';\nimport { enqueueRender } from '../render-queue';\nimport { getNodeProps } from './index';\nimport { diff, mounts, diffLevel, flushMounts, recollectNodeTree, removeChildren } from './diff';\nimport { createComponent, recyclerComponents } from './component-recycler';\nimport { removeNode } from '../dom/index';\n\n/**\n * Set a component's `props` and possibly re-render the component\n * @param {import('../component').Component} component The Component to set props on\n * @param {object} props The new props\n * @param {number} renderMode Render options - specifies how to re-render the component\n * @param {object} context The new context\n * @param {boolean} mountAll Whether or not to immediately mount all components\n */\nexport function setComponentProps(component, props, renderMode, context, mountAll) {\n\tif (component._disable) return;\n\tcomponent._disable = true;\n\n\tcomponent.__ref = props.ref;\n\tcomponent.__key = props.key;\n\tdelete props.ref;\n\tdelete props.key;\n\n\tif (typeof component.constructor.getDerivedStateFromProps === 'undefined') {\n\t\tif (!component.base || mountAll) {\n\t\t\tif (component.componentWillMount) component.componentWillMount();\n\t\t}\n\t\telse if (component.componentWillReceiveProps) {\n\t\t\tcomponent.componentWillReceiveProps(props, context);\n\t\t}\n\t}\n\n\tif (context && context!==component.context) {\n\t\tif (!component.prevContext) component.prevContext = component.context;\n\t\tcomponent.context = context;\n\t}\n\n\tif (!component.prevProps) component.prevProps = component.props;\n\tcomponent.props = props;\n\n\tcomponent._disable = false;\n\n\tif (renderMode!==NO_RENDER) {\n\t\tif (renderMode===SYNC_RENDER || options.syncComponentUpdates!==false || !component.base) {\n\t\t\trenderComponent(component, SYNC_RENDER, mountAll);\n\t\t}\n\t\telse {\n\t\t\tenqueueRender(component);\n\t\t}\n\t}\n\n\tapplyRef(component.__ref, component);\n}\n\n\n\n/**\n * Render a Component, triggering necessary lifecycle events and taking\n * High-Order Components into account.\n * @param {import('../component').Component} component The component to render\n * @param {number} [renderMode] render mode, see constants.js for available options.\n * @param {boolean} [mountAll] Whether or not to immediately mount all components\n * @param {boolean} [isChild] ?\n * @private\n */\nexport function renderComponent(component, renderMode, mountAll, isChild) {\n\tif (component._disable) return;\n\n\tlet props = component.props,\n\t\tstate = component.state,\n\t\tcontext = component.context,\n\t\tpreviousProps = component.prevProps || props,\n\t\tpreviousState = component.prevState || state,\n\t\tpreviousContext = component.prevContext || context,\n\t\tisUpdate = component.base,\n\t\tnextBase = component.nextBase,\n\t\tinitialBase = isUpdate || nextBase,\n\t\tinitialChildComponent = component._component,\n\t\tskip = false,\n\t\tsnapshot = previousContext,\n\t\trendered, inst, cbase;\n\n\tif (component.constructor.getDerivedStateFromProps) {\n\t\tstate = extend(extend({}, state), component.constructor.getDerivedStateFromProps(props, state));\n\t\tcomponent.state = state;\n\t}\n\n\t// if updating\n\tif (isUpdate) {\n\t\tcomponent.props = previousProps;\n\t\tcomponent.state = previousState;\n\t\tcomponent.context = previousContext;\n\t\tif (renderMode!==FORCE_RENDER\n\t\t\t&& component.shouldComponentUpdate\n\t\t\t&& component.shouldComponentUpdate(props, state, context) === false) {\n\t\t\tskip = true;\n\t\t}\n\t\telse if (component.componentWillUpdate) {\n\t\t\tcomponent.componentWillUpdate(props, state, context);\n\t\t}\n\t\tcomponent.props = props;\n\t\tcomponent.state = state;\n\t\tcomponent.context = context;\n\t}\n\n\tcomponent.prevProps = component.prevState = component.prevContext = component.nextBase = null;\n\tcomponent._dirty = false;\n\n\tif (!skip) {\n\t\trendered = component.render(props, state, context);\n\n\t\t// context to pass to the child, can be updated via (grand-)parent component\n\t\tif (component.getChildContext) {\n\t\t\tcontext = extend(extend({}, context), component.getChildContext());\n\t\t}\n\n\t\tif (isUpdate && component.getSnapshotBeforeUpdate) {\n\t\t\tsnapshot = component.getSnapshotBeforeUpdate(previousProps, previousState);\n\t\t}\n\n\t\tlet childComponent = rendered && rendered.nodeName,\n\t\t\ttoUnmount, base;\n\n\t\tif (typeof childComponent==='function') {\n\t\t\t// set up high order component link\n\n\t\t\tlet childProps = getNodeProps(rendered);\n\t\t\tinst = initialChildComponent;\n\n\t\t\tif (inst && inst.constructor===childComponent && childProps.key==inst.__key) {\n\t\t\t\tsetComponentProps(inst, childProps, SYNC_RENDER, context, false);\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttoUnmount = inst;\n\n\t\t\t\tcomponent._component = inst = createComponent(childComponent, childProps, context);\n\t\t\t\tinst.nextBase = inst.nextBase || nextBase;\n\t\t\t\tinst._parentComponent = component;\n\t\t\t\tsetComponentProps(inst, childProps, NO_RENDER, context, false);\n\t\t\t\trenderComponent(inst, SYNC_RENDER, mountAll, true);\n\t\t\t}\n\n\t\t\tbase = inst.base;\n\t\t}\n\t\telse {\n\t\t\tcbase = initialBase;\n\n\t\t\t// destroy high order component link\n\t\t\ttoUnmount = initialChildComponent;\n\t\t\tif (toUnmount) {\n\t\t\t\tcbase = component._component = null;\n\t\t\t}\n\n\t\t\tif (initialBase || renderMode===SYNC_RENDER) {\n\t\t\t\tif (cbase) cbase._component = null;\n\t\t\t\tbase = diff(cbase, rendered, context, mountAll || !isUpdate, initialBase && initialBase.parentNode, true);\n\t\t\t}\n\t\t}\n\n\t\tif (initialBase && base!==initialBase && inst!==initialChildComponent) {\n\t\t\tlet baseParent = initialBase.parentNode;\n\t\t\tif (baseParent && base!==baseParent) {\n\t\t\t\tbaseParent.replaceChild(base, initialBase);\n\n\t\t\t\tif (!toUnmount) {\n\t\t\t\t\tinitialBase._component = null;\n\t\t\t\t\trecollectNodeTree(initialBase, false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (toUnmount) {\n\t\t\tunmountComponent(toUnmount);\n\t\t}\n\n\t\tcomponent.base = base;\n\t\tif (base && !isChild) {\n\t\t\tlet componentRef = component,\n\t\t\t\tt = component;\n\t\t\twhile ((t=t._parentComponent)) {\n\t\t\t\t(componentRef = t).base = base;\n\t\t\t}\n\t\t\tbase._component = componentRef;\n\t\t\tbase._componentConstructor = componentRef.constructor;\n\t\t}\n\t}\n\n\tif (!isUpdate || mountAll) {\n\t\tmounts.push(component);\n\t}\n\telse if (!skip) {\n\t\t// Ensure that pending componentDidMount() hooks of child components\n\t\t// are called before the componentDidUpdate() hook in the parent.\n\t\t// Note: disabled as it causes duplicate hooks, see https://github.com/developit/preact/issues/750\n\t\t// flushMounts();\n\n\t\tif (component.componentDidUpdate) {\n\t\t\tcomponent.componentDidUpdate(previousProps, previousState, snapshot);\n\t\t}\n\t\tif (options.afterUpdate) options.afterUpdate(component);\n\t}\n\n\twhile (component._renderCallbacks.length) component._renderCallbacks.pop().call(component);\n\n\tif (!diffLevel && !isChild) flushMounts();\n}\n\n\n\n/**\n * Apply the Component referenced by a VNode to the DOM.\n * @param {import('../dom').PreactElement} dom The DOM node to mutate\n * @param {import('../vnode').VNode} vnode A Component-referencing VNode\n * @param {object} context The current context\n * @param {boolean} mountAll Whether or not to immediately mount all components\n * @returns {import('../dom').PreactElement} The created/mutated element\n * @private\n */\nexport function buildComponentFromVNode(dom, vnode, context, mountAll) {\n\tlet c = dom && dom._component,\n\t\toriginalComponent = c,\n\t\toldDom = dom,\n\t\tisDirectOwner = c && dom._componentConstructor===vnode.nodeName,\n\t\tisOwner = isDirectOwner,\n\t\tprops = getNodeProps(vnode);\n\twhile (c && !isOwner && (c=c._parentComponent)) {\n\t\tisOwner = c.constructor===vnode.nodeName;\n\t}\n\n\tif (c && isOwner && (!mountAll || c._component)) {\n\t\tsetComponentProps(c, props, ASYNC_RENDER, context, mountAll);\n\t\tdom = c.base;\n\t}\n\telse {\n\t\tif (originalComponent && !isDirectOwner) {\n\t\t\tunmountComponent(originalComponent);\n\t\t\tdom = oldDom = null;\n\t\t}\n\n\t\tc = createComponent(vnode.nodeName, props, context);\n\t\tif (dom && !c.nextBase) {\n\t\t\tc.nextBase = dom;\n\t\t\t// passing dom/oldDom as nextBase will recycle it if unused, so bypass recycling on L229:\n\t\t\toldDom = null;\n\t\t}\n\t\tsetComponentProps(c, props, SYNC_RENDER, context, mountAll);\n\t\tdom = c.base;\n\n\t\tif (oldDom && dom!==oldDom) {\n\t\t\toldDom._component = null;\n\t\t\trecollectNodeTree(oldDom, false);\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n\n\n/**\n * Remove a component from the DOM and recycle it.\n * @param {import('../component').Component} component The Component instance to unmount\n * @private\n */\nexport function unmountComponent(component) {\n\tif (options.beforeUnmount) options.beforeUnmount(component);\n\n\tlet base = component.base;\n\n\tcomponent._disable = true;\n\n\tif (component.componentWillUnmount) component.componentWillUnmount();\n\n\tcomponent.base = null;\n\n\t// recursively tear down & recollect high-order component children:\n\tlet inner = component._component;\n\tif (inner) {\n\t\tunmountComponent(inner);\n\t}\n\telse if (base) {\n\t\tif (base[ATTR_KEY]!=null) applyRef(base[ATTR_KEY].ref, null);\n\n\t\tcomponent.nextBase = base;\n\n\t\tremoveNode(base);\n\t\trecyclerComponents.push(component);\n\n\t\tremoveChildren(base);\n\t}\n\n\tapplyRef(component.__ref, null);\n}\n","import { FORCE_RENDER } from './constants';\nimport { extend } from './util';\nimport { renderComponent } from './vdom/component';\nimport { enqueueRender } from './render-queue';\n/**\n * Base Component class.\n * Provides `setState()` and `forceUpdate()`, which trigger rendering.\n * @typedef {object} Component\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components' getChildContext\n * @public\n *\n * @example\n * class MyFoo extends Component {\n *   render(props, state) {\n *     return <div />;\n *   }\n * }\n */\nexport function Component(props, context) {\n\tthis._dirty = true;\n\n\t/**\n\t * @public\n\t * @type {object}\n\t */\n\tthis.context = context;\n\n\t/**\n\t * @public\n\t * @type {object}\n\t */\n\tthis.props = props;\n\n\t/**\n\t * @public\n\t * @type {object}\n\t */\n\tthis.state = this.state || {};\n\n\tthis._renderCallbacks = [];\n}\n\n\nextend(Component.prototype, {\n\n\t/**\n\t * Update component state and schedule a re-render.\n\t * @param {object} state A dict of state properties to be shallowly merged\n\t * \tinto the current state, or a function that will produce such a dict. The\n\t * \tfunction is called with the current state and props.\n\t * @param {() => void} callback A function to be called once component state is\n\t * \tupdated\n\t */\n\tsetState(state, callback) {\n\t\tif (!this.prevState) this.prevState = this.state;\n\t\tthis.state = extend(\n\t\t\textend({}, this.state),\n\t\t\ttypeof state === 'function' ? state(this.state, this.props) : state\n\t\t);\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t},\n\n\n\t/**\n\t * Immediately perform a synchronous re-render of the component.\n\t * @param {() => void} callback A function to be called after component is\n\t * \tre-rendered.\n\t * @private\n\t */\n\tforceUpdate(callback) {\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\trenderComponent(this, FORCE_RENDER);\n\t},\n\n\n\t/**\n\t * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n\t * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n\t * @param {object} props Props (eg: JSX attributes) received from parent\n\t * \telement/component\n\t * @param {object} state The component's current state\n\t * @param {object} context Context object, as returned by the nearest\n\t *  ancestor's `getChildContext()`\n\t * @returns {import('./vnode').VNode | void}\n\t */\n\trender() {}\n\n});\n","import { diff } from './vdom/diff';\n\n/**\n * Render JSX into a `parent` Element.\n * @param {import('./vnode').VNode} vnode A (JSX) VNode to render\n * @param {import('./dom').PreactElement} parent DOM element to render into\n * @param {import('./dom').PreactElement} [merge] Attempt to re-use an existing DOM tree rooted at\n *  `merge`\n * @public\n *\n * @example\n * // render a div into <body>:\n * render(<div id=\"hello\">hello!</div>, document.body);\n *\n * @example\n * // render a \"Thing\" component into #foo:\n * const Thing = ({ name }) => <span>{ name }</span>;\n * render(<Thing name=\"one\" />, document.querySelector('#foo'));\n */\nexport function render(vnode, parent, merge) {\n\treturn diff(merge, vnode, {}, false, parent, false);\n}\n","/**\n * @param {String} [coords]\n * @returns {Promise<any>}\n */\nfunction getWeatherData(coords) {\n    return new Promise((resolve, reject) => {\n        fetch(`/api/weather${coords ? `/${coords}` : ''}`)\n            .then(response => response.json())\n            .then(response => resolve(response))\n            .catch(reject);\n    });\n}\n\nexport default {\n    getWeatherData\n};\n","/**\n * Takes raw geoloaction result and parses it into a simple object\n * @param {Object} position\n * @returns {{lat: string|number, lon: string|number}}\n */\nfunction positionToObject(position) {\n    return {\n        lat: position.coords.latitude,\n        lon: position.coords.longitude\n    };\n}\n\nfunction getGeoPosition() {\n    return new Promise((resolve, reject) => {\n        // resolve({\n        //     lat: 51.4649087,\n        //     lon: -0.0126483\n        // });\n        navigator.geolocation.getCurrentPosition((position) => {\n            resolve(positionToObject(position));\n        }, reject, {\n            enableHighAccuracy: true, // we really don't need it\n            timeout: 10000, // 10 second timeout\n            maximumAge: 1200000 // 20 minutes\n        });\n    });\n}\n\nexport default {\n    positionToObject,\n    getGeoPosition\n};\n","import { h } from 'preact';\nimport './Card.css';\n\nconst Card = props => {\n    const classes = ['card', props.className || ''].join(' ');\n\n    return (\n        <div className={classes}>\n            {props.children}\n        </div>\n    );\n};\n\nexport default Card;\n","import { h } from 'preact';\n\nconst styling = {\n    marginBottom: '10px'\n};\n\nconst CardHeader = props => (\n    <div style={Object.assign(styling, props.style)}>\n        {props.children}\n    </div>\n);\n\nexport default CardHeader;\n","import { h } from 'preact';\n\nconst styling = {\n    fontWeight: 700,\n    color: '#3C4858'\n};\n\nconst CardTitle = props => (\n    <h2 style={styling}>\n        {props.children}\n    </h2>\n);\n\nexport default CardTitle;\n","import { h } from 'preact';\n\nconst CardLoading = () => (\n    <div>\n        Loading...\n    </div>\n);\n\nexport default CardLoading;\n","import { h } from 'preact';\nimport './Weather.css';\n\nconst WeatherRow = (props) => {\n    const row = props.row;\n    const hourOfWeather = `${row.hour < 10 ? '0' : ''}${row.hour}:00 `;\n\n    return (\n        <p key={row.hour} className={`rain rain-${row.pop}`}>\n            {hourOfWeather}\n            - ☀️ {row.feelsLike}°\n            / 💨 {row.windSpeed}mph\n            / {row.condition}\n        </p>\n    );\n};\n\nexport default WeatherRow;\n","import { h } from 'preact';\n\nconst CardInner = (props) => {\n    const styling = Object.assign(props.style || {}, {\n        borderRadius: '10px',\n        background: '#E5E9F2',\n        position: 'relative',\n        boxShadow: '0 1px 2px 0 rgba(31,45,61,.15)'\n    });\n\n    if (props.withPadding) {\n        styling.padding = '10px';\n    }\n\n    return (\n        <div style={styling} className={props.className}>\n            {props.children}\n        </div>\n    );\n};\n\nexport default CardInner;\n","import { h } from 'preact';\n\nconst WeatherViewMore = (props) => {\n    const styling = {\n        position: 'absolute',\n        top: '10px',\n        right: '10px'\n    };\n\n    if (!props.isVisible) {\n        styling.display = 'none';\n    }\n\n    return (\n        <a href=\"\" onClick={props.onClick} style={styling}>\n            Further ahead &gt;\n        </a>\n    );\n};\n\nexport default WeatherViewMore;\n","import Mitt from 'mitt';\n\nconst emitter = Mitt();\n\nexport default {\n    subscribe: emitter.on,\n    publish: emitter.emit\n};\n","export default {\n    STATION_SELECT_OPEN: 'Open station select',\n    STATION_SELECT_CLOSE: 'Close station select',\n    STATION_SELECT: 'Station selected',\n    REFRESH: 'Refresh data'\n};\n","import { h, Component } from 'preact';\nimport './Weather.css';\n\nimport WeatherService from '../../services/WeatherService';\nimport GeoService from '../../services/GeoService';\n\nimport Card from '../../components/Card';\nimport CardHeader from '../../components/CardHeader';\nimport CardTitle from '../../components/CardTitle';\nimport CardLoading from '../../components/CardLoading';\nimport WeatherRow from '../../components/WeatherRow';\nimport CardInner from '../../components/CardInner';\nimport WeatherViewMore from '../../components/WeatherViewMore';\nimport PubSub from '../../services/PubSub';\nimport Constants from '../../services/Constants';\n\nclass Weather extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            weather: null,\n            limit: 12\n        };\n\n        this.increaseLimit = this.increaseLimit.bind(this);\n        this.getGeoData = this.getGeoData.bind(this);\n    }\n\n    componentDidMount() {\n        PubSub.subscribe(Constants.REFRESH, this.getGeoData);\n        this.getGeoData();\n    }\n\n    getGeoData() {\n        this.setState({\n            weather: null\n        });\n\n        GeoService.getGeoPosition()\n            .then((coords) => {\n                this.getWeatherData(`${coords.lat},${coords.lon}`);\n            })\n            .catch(() => {\n                this.getWeatherData();\n            });\n    }\n\n    /**\n     * getWeatherData\n     * @param {String} [coords]\n     */\n    getWeatherData(coords) {\n        this.setState({\n            weather: null\n        });\n\n        WeatherService.getWeatherData(coords)\n            .then((response) => {\n                this.setState({\n                    weather: response.data\n                });\n            });\n    }\n\n    /**\n     * increaseLimit\n     * @param {Event} event\n     */\n    increaseLimit(event) {\n        event.preventDefault();\n\n        this.setState({\n            limit: 24\n        });\n    }\n\n    render() {\n        const hasData = !!this.state.weather;\n        const shouldShowViewMore = this.state.limit !== 24;\n        const weatherRows = hasData && this.state.weather.slice(0, this.state.limit);\n\n        return (\n            <Card>\n                <CardHeader style={{ position: 'relative' }}>\n                    <CardTitle>Weather</CardTitle>\n                    {\n                        hasData &&\n                        <WeatherViewMore onClick={this.increaseLimit} isVisible={shouldShowViewMore} />\n                    }\n                </CardHeader>\n                {\n                    hasData &&\n                    <CardInner className=\"fade-out\">\n                        <div style={{ overflowX: 'scroll' }}>\n                            {\n                                weatherRows.map(row => <WeatherRow row={row} />)\n                            }\n                        </div>\n                    </CardInner>\n                }\n                {\n                    !hasData &&\n                    <CardLoading />\n                }\n            </Card>\n        );\n    }\n}\n\nexport default Weather;\n","function getTubeData() {\n    return new Promise((resolve, reject) => {\n        fetch('/api/tube')\n            .then(response => response.json())\n            .then(response => resolve(response))\n            .catch(reject);\n    });\n}\n\nexport default {\n    getTubeData\n};\n","import { h } from 'preact';\nimport './Tube.css';\n\nconst WeatherRow = (props) => {\n    const row = props.row;\n\n    return (\n        <p key={row.line} className={`line ${row.line}`}>\n            {row.disruption}\n        </p>\n    );\n};\n\nexport default WeatherRow;\n","import { h, Component } from 'preact';\n\nimport TubeService from '../../services/TubeService';\nimport Card from '../../components/Card';\nimport CardHeader from '../../components/CardHeader';\nimport CardTitle from '../../components/CardTitle';\nimport CardLoading from '../../components/CardLoading';\nimport CardInner from '../../components/CardInner';\nimport TubeRow from '../../components/TubeRow';\nimport PubSub from '../../services/PubSub';\nimport Constants from '../../services/Constants';\n\nclass Tube extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            tube: null\n        };\n\n        this.getData = this.getData.bind(this);\n    }\n\n    componentDidMount() {\n        PubSub.subscribe(Constants.REFRESH, this.getGeoData);\n        this.getData();\n    }\n\n    getData() {\n        this.setState({\n            tube: null\n        });\n\n        TubeService.getTubeData()\n            .then((response) => {\n                this.setState({\n                    tube: response.data\n                });\n            });\n    }\n\n    render() {\n        const hasData = !!this.state.tube;\n\n        return (\n            <Card>\n                <CardHeader>\n                    <CardTitle>Tube</CardTitle>\n                </CardHeader>\n                {\n                    !hasData &&\n                    <CardLoading />\n                }\n                {\n                    hasData &&\n                    <CardInner>\n                        {this.state.tube.map(row => <TubeRow row={row} />)}\n                    </CardInner>\n                }\n            </Card>\n        );\n    }\n}\n\nexport default Tube;\n","let STATIONS = {};\n\nfunction getRailData(from = 'LEW', to = 'CHX', coords = '') {\n    const newCoords = coords ? `/${coords}` : '';\n\n    return new Promise((resolve, reject) => {\n        fetch(`/api/rail/${from}/${to}${newCoords}`)\n            .then(response => response.json())\n            .then(response => resolve(response))\n            .catch(reject);\n    });\n}\n\nfunction getStationsList(coords = '') {\n    const newCoords = coords ? `/${coords}` : '';\n\n    return new Promise((resolve, reject) => {\n        if (Object.keys(STATIONS).length) {\n            return resolve({ data: STATIONS });\n        }\n\n        return fetch(`/api/rail/stations${newCoords}`)\n            .then(response => response.json())\n            .then((response) => {\n                STATIONS = response.data;\n                resolve(response);\n            })\n            .catch(reject);\n    });\n}\n\nfunction filterStationsList(filterString) {\n    if (filterString === '' || filterString.length < 2) {\n        return STATIONS;\n    }\n\n    const foundEntries = {};\n    const searchString = filterString.toLowerCase();\n\n    Object.entries(STATIONS).forEach((entry) => {\n        const key = entry[0];\n        const value = entry[1].title || entry[1];\n\n        if (!foundEntries[key]) {\n            foundEntries[key] = {\n                value: '',\n                score: 0\n            };\n        }\n\n        if (key.toLowerCase().includes(searchString)) {\n            foundEntries[key].value = value;\n            foundEntries[key].score += 5;\n        }\n\n        if (value.toLowerCase() === searchString) {\n            foundEntries[key].value = value;\n            foundEntries[key].score += 2.5;\n        }\n\n        if (value.toLowerCase().startsWith(searchString)) {\n            foundEntries[key].value = value;\n            foundEntries[key].score += 1.5;\n        }\n\n        if (value.toLowerCase().includes(searchString)) {\n            foundEntries[key].value = value;\n            foundEntries[key].score += 1;\n        }\n    });\n\n    const toReturn = {};\n    Object.entries(foundEntries)\n        .sort((a, b) => {\n            if (a[1].score < b[1].score) {\n                return 1;\n            }\n\n            if (a[1].score > b[1].score) {\n                return -1;\n            }\n\n            return 0;\n        })\n        .map((element) => {\n            const objectToReturn = {};\n\n            objectToReturn[element[0]] = element[1].value;\n\n            return objectToReturn;\n        })\n        .filter(element => !!Object.values(element)[0])\n        .forEach((element) => {\n            const key = Object.keys(element)[0];\n            const value = Object.values(element)[0];\n\n            toReturn[key] = value;\n        });\n\n    return toReturn;\n}\n\nexport default {\n    getRailData,\n    getStationsList,\n    filterStationsList\n};\n","function parse() {\n    const data = {};\n\n    if (!window.location.search) {\n        return data;\n    }\n\n    window.location.search\n        .substring(1)\n        .split('&')\n        .forEach((element) => {\n            const queryStringParameter = element.split('=');\n            data[queryStringParameter[0]] = queryStringParameter[1];\n        });\n\n    return data;\n}\n\nfunction addOrUpdateQueryString(key, value) {\n    const parsed = parse();\n\n    parsed[key] = value;\n\n    const encoded = Object.entries(parsed).map(([k, v]) => `${k}=${v}`).join('&');\n    window.history.pushState({ path: `?${encoded}` }, '', `?${encoded}`);\n}\n\nexport default {\n    parse,\n    addOrUpdateQueryString\n};\n","import { h } from 'preact';\nimport CardInner from './CardInner';\n\nconst styling = {\n    marginBottom: '10px'\n};\n\nconst RailMessages = (props) => {\n    if (!props.messages.length) {\n        return null;\n    }\n\n    return (\n        <CardInner style={styling} withPadding>\n            {props.messages.map(row => (\n                <ul>\n                    <li dangerouslySetInnerHTML={{ __html: row }} />\n                </ul>\n            ))}\n        </CardInner>\n    );\n};\n\nexport default RailMessages;\n","import { h, Component } from 'preact';\nimport Constants from '../../services/Constants';\nimport PubSub from '../../services/PubSub';\nimport QueryString from '../../services/QueryString';\n\nimport './RailFromTo.css';\n\nclass RailFromTo extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            from: props.data.fromName,\n            to: props.data.toName\n        };\n\n        this.showStationSelector = this.showStationSelector.bind(this);\n        this.switchDirection = this.switchDirection.bind(this);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            from: nextProps.data.fromName,\n            to: nextProps.data.toName\n        });\n    }\n\n    showStationSelector(station) {\n        PubSub.publish(Constants.STATION_SELECT_OPEN, { stationToChange: station });\n    }\n\n    switchDirection() {\n        QueryString.addOrUpdateQueryString('from', this.props.data.to);\n        QueryString.addOrUpdateQueryString('to', this.props.data.from);\n\n        PubSub.publish(Constants.STATION_SELECT);\n    }\n\n    render() {\n        return (\n            <div>\n                <span className=\"selector\" onClick={() => this.showStationSelector('from')}>\n                    {this.state.from}\n                </span>\n                <span onClick={this.switchDirection}> &rarr; </span>\n                <span className=\"selector\" onClick={() => this.showStationSelector('to')}>\n                    {this.state.to}\n                </span>\n            </div>\n        );\n    }\n}\n\nexport default RailFromTo;\n","import { h } from 'preact';\n\nconst styling = {\n    padding: '5px 5px'\n};\n\nfunction getStatus(row) {\n    return row.cancelReason ? 'Cancelled' : row.etd;\n}\n\nfunction getStatusText(row) {\n    let toReturn = '';\n\n    if (row.cancelReason || row.delayReason) {\n        toReturn = `<br><small>${row.cancelReason || row.delayReason}</small>`;\n    }\n\n    return toReturn;\n}\n\nconst RailRow = (props) => {\n    const row = props.row;\n\n    const key = `${row.std}${row.etd}${row.platform}${row.from}${row.to}`;\n    const platform = row.platform ? ` / Platform ${row.platform}` : '';\n    const departureTime = row.std;\n    const trainStatus = getStatus(row);\n\n    return (\n        <p key={key} style={styling}>\n            {departureTime} ({trainStatus}) {platform}\n            <span dangerouslySetInnerHTML={{ __html: getStatusText(row) }} />\n        </p>\n    );\n};\n\nexport default RailRow;\n","import { h, Component } from 'preact';\n\nimport RailService from '../../services/RailService';\nimport GeoService from '../../services/GeoService';\nimport QueryString from '../../services/QueryString';\n\nimport RailMessages from '../../components/RailMessages';\nimport Card from '../../components/Card';\nimport CardHeader from '../../components/CardHeader';\nimport CardTitle from '../../components/CardTitle';\nimport CardLoading from '../../components/CardLoading';\nimport RailFromTo from '../../components/RailFromTo';\nimport CardInner from '../../components/CardInner';\nimport RailRow from '../../components/RailRow';\nimport PubSub from '../../services/PubSub';\nimport Constants from '../../services/Constants';\n\nclass Rail extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            rail: null,\n            limit: 6\n        };\n\n        this.getGeoRailData = this.getGeoRailData.bind(this);\n        this.getRailData = this.getRailData.bind(this);\n    }\n\n    componentDidMount() {\n        PubSub.subscribe(Constants.STATION_SELECT, this.getGeoRailData);\n        PubSub.subscribe(Constants.REFRESH, this.getGeoRailData);\n        this.getGeoRailData();\n    }\n\n    getGeoRailData() {\n        this.setState({\n            rail: null\n        });\n\n        const overrides = QueryString.parse();\n\n        const from = overrides.from || 'LEW';\n        const to = overrides.to || 'CHX';\n\n        if (overrides.from && overrides.to) {\n            this.getRailData(from, to);\n        } else {\n            GeoService.getGeoPosition()\n                .then((coords) => {\n                    this.getRailData(from, to, `${coords.lat},${coords.lon}`);\n                })\n                .catch(() => {\n                    this.getRailData(from, to);\n                });\n        }\n    }\n\n    getRailData(to, from, coords) {\n        this.setState({\n            rail: null\n        });\n\n        RailService.getRailData(to, from, coords)\n            .then((data) => {\n                this.setState({\n                    rail: data.data\n                });\n            });\n    }\n\n    renderRailTimes() {\n        const railRows = this.state.rail.times.slice(0, this.state.limit);\n        const hasItems = !!railRows.length;\n\n        return (\n            <CardInner withPadding>\n                {\n                    !hasItems &&\n                    <div>No trains found for this journey</div>\n                }\n                {\n                    railRows.map(row => <RailRow row={row} />)\n                }\n            </CardInner>\n        );\n    }\n\n    render() {\n        const hasData = !!this.state.rail;\n        const shouldShowMessages = hasData && this.state.rail.messages.length > 0;\n        const metadata = this.state.rail && this.state.rail.meta;\n\n        return (\n            <Card className=\"card--rail\">\n                <CardHeader>\n                    <CardTitle>\n                        {!hasData && 'Rail'}\n                        {\n                            hasData &&\n                            <RailFromTo data={metadata} stationsList={this.state.stationsList} />\n                        }\n                    </CardTitle>\n                </CardHeader>\n                {!hasData && <CardLoading />}\n                {\n                    (hasData && shouldShowMessages) &&\n                    <RailMessages messages={this.state.rail.messages} />\n                }\n                {hasData && this.renderRailTimes()}\n            </Card>\n        );\n    }\n}\n\nexport default Rail;\n","import { h, Component } from 'preact';\nimport './StationSelector.css';\n\nimport CardLoading from '../../../components/CardLoading';\n\nimport RailService from '../../../services/RailService';\nimport QueryString from '../../../services/QueryString';\nimport PubSub from '../../../services/PubSub';\nimport Constants from '../../../services/Constants';\nimport GeoService from '../../../services/GeoService';\n\nclass StationSelector extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            stationsList: [],\n            filterString: '',\n            stationToChange: props.data.stationToChange\n        };\n\n        this.onSearch = this.onSearch.bind(this);\n        this.onStationSelect = this.onStationSelect.bind(this);\n        this.closeModal = this.closeModal.bind(this);\n        this.escapeListener = this.escapeListener.bind(this);\n        this.getStationsList = this.getStationsList.bind(this);\n    }\n\n    componentDidMount() {\n        GeoService.getGeoPosition()\n            .then((coords) => {\n                this.getStationsList(`${coords.lat},${coords.lon}`);\n            })\n            .catch(() => {\n                this.getStationsList();\n            });\n\n        window.addEventListener('keyup', this.escapeListener);\n        document.getElementById('search').focus();\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('keyup', this.escapeListener);\n    }\n\n    onSearch(event) {\n        this.setState({\n            filterString: event.target.value\n        });\n    }\n\n    onStationSelect(stationCode) {\n        QueryString.addOrUpdateQueryString(this.state.stationToChange, stationCode);\n        PubSub.publish(Constants.STATION_SELECT);\n        this.closeModal();\n    }\n\n    getStationsList(coords) {\n        RailService.getStationsList(coords)\n            .then((response) => {\n                this.setState({\n                    stationsList: response.data\n                });\n            });\n    }\n\n    escapeListener(event) {\n        if (event.keyCode === 27) {\n            this.closeModal();\n        }\n    }\n\n    closeModal(event) {\n        if (!event || event.target.id === 'modal') {\n            PubSub.publish(Constants.STATION_SELECT_CLOSE);\n        }\n    }\n\n    render() {\n        const filtered = RailService.filterStationsList(this.state.filterString);\n        const data = Object.keys(filtered).map(stationCode => ({\n            code: stationCode,\n            title: filtered[stationCode].title || filtered[stationCode]\n        }));\n\n        return (\n            <div className=\"modal-container\" onClick={this.closeModal} id=\"modal\">\n                <div className=\"modal\">\n                    <input\n                        type=\"text\"\n                        className=\"search\"\n                        onKeyUp={this.onSearch}\n                        id=\"search\"\n                        value={this.state.filterString}\n                        placeholder=\"Search for a station\"\n                    />\n                    {\n                        !data.length &&\n                        <div className=\"station\">\n                            <CardLoading />\n                        </div>\n                    }\n                    {\n                        !!data.length &&\n                        <div className=\"stations\">\n                            {data.map(element => (\n                                <div className=\"station\" onClick={() => this.onStationSelect(element.code)}>\n                                    {element.title}\n                                </div>\n                            ))}\n                        </div>\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default StationSelector;\n","import { h, Component } from 'preact';\n\nimport StationSelector from './StationSelector';\n\nimport PubSub from '../../services/PubSub';\nimport Constants from '../../services/Constants';\n\nclass Modal extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            modals: []\n        };\n\n        this.removeModal = this.removeModal.bind(this);\n        this.lockScrolling = this.lockScrolling.bind(this);\n        this.unlockScrolling = this.unlockScrolling.bind(this);\n    }\n\n    componentDidMount() {\n        PubSub.subscribe(Constants.STATION_SELECT_OPEN, (data) => {\n            const newModals = this.state.modals;\n            newModals.push(<StationSelector key=\"stationSelector\" data={data} />);\n            this.setState({\n                modals: newModals\n            });\n        });\n        PubSub.subscribe(Constants.STATION_SELECT, () => this.removeModal('stationSelector'));\n        PubSub.subscribe(Constants.STATION_SELECT_CLOSE, () => this.removeModal('stationSelector'));\n    }\n\n    removeModal(modalKey) {\n        const newModals = this.state.modals.filter(element => element.key !== modalKey);\n\n        if (!newModals.length) {\n            this.unlockScrolling();\n        }\n\n        this.setState({\n            modals: newModals\n        });\n    }\n\n    lockScrolling() {\n        document.getElementsByTagName('body')[0].style.overflow = 'hidden';\n    }\n\n    unlockScrolling() {\n        document.getElementsByTagName('body')[0].style.overflow = '';\n    }\n\n    render() {\n        if (this.state.modals.length) {\n            this.lockScrolling();\n        }\n\n        return (\n            <div>\n                {this.state.modals}\n            </div>\n        );\n    }\n}\n\nexport default Modal;\n","import { h, render } from 'preact';\n\nimport '../styles/main.css';\n\nimport Weather from './views/Weather';\nimport Tube from './views/Tube';\nimport Rail from './views/Rail';\nimport Modal from './components/Modal';\n\nimport PubSub from './services/PubSub';\nimport Constants from './services/Constants';\n\nconst Root = () => (\n    <div className=\"container\">\n        <Modal />\n        <div className=\"title\" onClick={() => PubSub.publish(Constants.REFRESH)}>Rdy.Today</div>\n        <Weather />\n        <br />\n        <Rail />\n        <br />\n        <Tube />\n    </div>\n);\n\nrender(<Root />, document.getElementById('main'), document.getElementById('main').lastChild);\n"]}