{"version":3,"sources":["../src/render.js","../src/vnode.js","../src/options.js","../src/h.js","../src/util.js","../src/clone-element.js","../src/constants.js","../src/render-queue.js","../src/vdom/index.js","../src/dom/index.js","../src/vdom/diff.js","../src/vdom/component-recycler.js","../src/vdom/component.js","../src/component.js","services/WeatherService.js","services/GeoService.js","components/Card/index.jsx","components/CardHeader.jsx","components/CardTitle.jsx","components/CardLoading.jsx","components/WeatherRow/index.jsx","components/CardInner.jsx","components/WeatherViewMore.jsx","services/PubSub.js","services/Constants.js","views/Weather/index.jsx","services/TubeService.js","components/TubeRow/index.jsx","views/Tube/index.jsx","services/RailService.js","services/QueryString.js","components/RailMessages.jsx","components/RailFromTo/index.jsx","components/RailRow.jsx","views/Rail/index.jsx","components/Modal/StationSelector/index.jsx","components/Modal/index.jsx","index.jsx"],"names":["diff","VNode","stack","EMPTY_CHILDREN","h","nodeName","attributes","children","lastSimple","child","simple","i","arguments","length","push","pop","undefined","String","p","key","options","vnode","extend","obj","props","defer","Promise","resolve","then","bind","setTimeout","cloneElement","slice","call","ASYNC_RENDER","ATTR_KEY","items","component","enqueueRender","_dirty","debounceRendering","hydrating","_componentConstructor","defaultProps","createNode","node","isSvg","document","normalizedNodeName","name","old","value","style","cssText","innerHTML","__html","useCapture","replace","toLowerCase","substring","addEventListener","eventProxy","removeEventListener","_listeners","setAccessor","setProperty","mounts","diffLevel","isSvgMode","parent","ownerSVGElement","dom","ret","componentRoot","prevSvgMode","splitText","parentNode","vnodeName","buildComponentFromVNode","appendChild","vchildren","originalChildren","keyed","keyedLen","childrenLen","vlen","j","c","vchild","f","len","min","insertBefore","_component","next","components","Ctor","constructor","createComponent","list","context","Component","splice","setComponentProps","__ref","__key","componentWillReceiveProps","prevProps","previousProps","previousState","renderComponent","_disable","state","nextBase","initialBase","isUpdate","initialChildComponent","skip","rendered","inst","cbase","toUnmount","childComponent","childProps","getNodeProps","opts","SYNC_RENDER","replaceChild","_parentComponent","componentRef","afterUpdate","flushMounts","originalComponent","isDirectOwner","isOwner","mountAll","unmountComponent","base","componentWillUnmount","callback","_renderCallbacks","render","getWeatherData","coords","reject","fetch","response","json","catch","positionToObject","position","lat","latitude","lon","longitude","getGeoPosition","navigator","geolocation","getCurrentPosition","Card","classes","className","join","CardHeader","styling","marginBottom","Object","assign","CardTitle","fontWeight","color","CardLoading","WeatherRow","row","hourOfWeather","hour","feelsLike","windSpeed","condition","CardInner","borderRadius","background","boxShadow","withPadding","padding","WeatherViewMore","top","right","isVisible","display","onClick","emitter","subscribe","on","publish","emit","STATION_SELECT_OPEN","STATION_SELECT_CLOSE","STATION_SELECT","REFRESH","Weather","weather","limit","increaseLimit","getGeoData","componentDidMount","Constants","setState","data","event","preventDefault","hasData","shouldShowViewMore","weatherRows","overflowX","map","getTubeData","line","disruption","Tube","tube","getData","STATIONS","getRailData","from","to","newCoords","getStationsList","keys","filterStationsList","filterString","foundEntries","searchString","entries","forEach","entry","title","score","includes","startsWith","toReturn","sort","a","b","element","objectToReturn","filter","values","parse","window","location","search","split","queryStringParameter","addOrUpdateQueryString","parsed","encoded","k","v","history","pushState","path","RailMessages","messages","RailFromTo","fromName","toName","showStationSelector","switchDirection","nextProps","station","stationToChange","RailRow","getStatus","cancelReason","etd","getStatusText","delayReason","std","platform","departureTime","trainStatus","Rail","rail","getGeoRailData","overrides","QueryString","renderRailTimes","railRows","times","hasItems","shouldShowMessages","metadata","meta","stationsList","StationSelector","onSearch","onStationSelect","closeModal","escapeListener","getElementById","focus","target","stationCode","keyCode","id","filtered","RailService","code","Modal","modals","removeModal","lockScrolling","unlockScrolling","newModals","modalKey","getElementsByTagName","overflow","Root","PubSub","lastChild"],"mappings":"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","file":"index.map","sourceRoot":"../src","sourcesContent":["import { diff } from './vdom/diff';\n\n/** Render JSX into a `parent` Element.\n *\t@param {VNode} vnode\t\tA (JSX) VNode to render\n *\t@param {Element} parent\t\tDOM element to render into\n *\t@param {Element} [merge]\tAttempt to re-use an existing DOM tree rooted at `merge`\n *\t@public\n *\n *\t@example\n *\t// render a div into <body>:\n *\trender(<div id=\"hello\">hello!</div>, document.body);\n *\n *\t@example\n *\t// render a \"Thing\" component into #foo:\n *\tconst Thing = ({ name }) => <span>{ name }</span>;\n *\trender(<Thing name=\"one\" />, document.querySelector('#foo'));\n */\nexport function render(vnode, parent, merge) {\n\treturn diff(merge, vnode, {}, false, parent, false);\n}\n","/** Virtual DOM Node */\nexport function VNode() {}\n","/** Global options\n *\t@public\n *\t@namespace options {Object}\n */\nexport default {\n\n\t/** If `true`, `prop` changes trigger synchronous component updates.\n\t *\t@name syncComponentUpdates\n\t *\t@type Boolean\n\t *\t@default true\n\t */\n\t//syncComponentUpdates: true,\n\n\t/** Processes all created VNodes.\n\t *\t@param {VNode} vnode\tA newly-created VNode to normalize/process\n\t */\n\t//vnode(vnode) { }\n\n\t/** Hook invoked after a component is mounted. */\n\t// afterMount(component) { }\n\n\t/** Hook invoked after the DOM is updated with a component's latest render. */\n\t// afterUpdate(component) { }\n\n\t/** Hook invoked immediately before a component is unmounted. */\n\t// beforeUnmount(component) { }\n};\n","import { VNode } from './vnode';\nimport options from './options';\n\n\nconst stack = [];\n\nconst EMPTY_CHILDREN = [];\n\n/**\n * JSX/hyperscript reviver.\n * @see http://jasonformat.com/wtf-is-jsx\n * Benchmarks: https://esbench.com/bench/57ee8f8e330ab09900a1a1a0\n *\n * Note: this is exported as both `h()` and `createElement()` for compatibility reasons.\n *\n * Creates a VNode (virtual DOM element). A tree of VNodes can be used as a lightweight representation\n * of the structure of a DOM tree. This structure can be realized by recursively comparing it against\n * the current _actual_ DOM structure, and applying only the differences.\n *\n * `h()`/`createElement()` accepts an element name, a list of attributes/props,\n * and optionally children to append to the element.\n *\n * @example The following DOM tree\n *\n * `<div id=\"foo\" name=\"bar\">Hello!</div>`\n *\n * can be constructed using this function as:\n *\n * `h('div', { id: 'foo', name : 'bar' }, 'Hello!');`\n *\n * @param {string} nodeName\tAn element name. Ex: `div`, `a`, `span`, etc.\n * @param {Object} attributes\tAny attributes/props to set on the created element.\n * @param rest\t\t\tAdditional arguments are taken to be children to append. Can be infinitely nested Arrays.\n *\n * @public\n */\nexport function h(nodeName, attributes) {\n\tlet children=EMPTY_CHILDREN, lastSimple, child, simple, i;\n\tfor (i=arguments.length; i-- > 2; ) {\n\t\tstack.push(arguments[i]);\n\t}\n\tif (attributes && attributes.children!=null) {\n\t\tif (!stack.length) stack.push(attributes.children);\n\t\tdelete attributes.children;\n\t}\n\twhile (stack.length) {\n\t\tif ((child = stack.pop()) && child.pop!==undefined) {\n\t\t\tfor (i=child.length; i--; ) stack.push(child[i]);\n\t\t}\n\t\telse {\n\t\t\tif (typeof child==='boolean') child = null;\n\n\t\t\tif ((simple = typeof nodeName!=='function')) {\n\t\t\t\tif (child==null) child = '';\n\t\t\t\telse if (typeof child==='number') child = String(child);\n\t\t\t\telse if (typeof child!=='string') simple = false;\n\t\t\t}\n\n\t\t\tif (simple && lastSimple) {\n\t\t\t\tchildren[children.length-1] += child;\n\t\t\t}\n\t\t\telse if (children===EMPTY_CHILDREN) {\n\t\t\t\tchildren = [child];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tchildren.push(child);\n\t\t\t}\n\n\t\t\tlastSimple = simple;\n\t\t}\n\t}\n\n\tlet p = new VNode();\n\tp.nodeName = nodeName;\n\tp.children = children;\n\tp.attributes = attributes==null ? undefined : attributes;\n\tp.key = attributes==null ? undefined : attributes.key;\n\n\t// if a \"vnode hook\" is defined, pass every created VNode to it\n\tif (options.vnode!==undefined) options.vnode(p);\n\n\treturn p;\n}\n","/**\n *  Copy all properties from `props` onto `obj`.\n *  @param {Object} obj\t\tObject onto which properties should be copied.\n *  @param {Object} props\tObject from which to copy properties.\n *  @returns obj\n *  @private\n */\nexport function extend(obj, props) {\n\tfor (let i in props) obj[i] = props[i];\n\treturn obj;\n}\n\n/**\n * Call a function asynchronously, as soon as possible. Makes\n * use of HTML Promise to schedule the callback if available,\n * otherwise falling back to `setTimeout` (mainly for IE<11).\n *\n * @param {Function} callback\n */\nexport const defer = typeof Promise=='function' ? Promise.resolve().then.bind(Promise.resolve()) : setTimeout;\n","import { extend } from './util';\nimport { h } from './h';\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its children.\n * @param {VNode} vnode\t\tThe virutal DOM element to clone\n * @param {Object} props\tAttributes/props to add when cloning\n * @param {VNode} rest\t\tAny additional arguments will be used as replacement children.\n */\nexport function cloneElement(vnode, props) {\n\treturn h(\n\t\tvnode.nodeName,\n\t\textend(extend({}, vnode.attributes), props),\n\t\targuments.length>2 ? [].slice.call(arguments, 2) : vnode.children\n\t);\n}\n","// render modes\n\nexport const NO_RENDER = 0;\nexport const SYNC_RENDER = 1;\nexport const FORCE_RENDER = 2;\nexport const ASYNC_RENDER = 3;\n\n\nexport const ATTR_KEY = '__preactattr_';\n\n// DOM properties that should NOT have \"px\" added when numeric\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|ows|mnc|ntw|ine[ch]|zoo|^ord/i;\n\n","import options from './options';\nimport { defer } from './util';\nimport { renderComponent } from './vdom/component';\n\n/** Managed queue of dirty components to be re-rendered */\n\nlet items = [];\n\nexport function enqueueRender(component) {\n\tif (!component._dirty && (component._dirty = true) && items.push(component)==1) {\n\t\t(options.debounceRendering || defer)(rerender);\n\t}\n}\n\nexport function rerender() {\n\tlet p, list = items;\n\titems = [];\n\twhile ( (p = list.pop()) ) {\n\t\tif (p._dirty) renderComponent(p);\n\t}\n}\n","import { extend } from '../util';\n\n\n/**\n * Check if two nodes are equivalent.\n *\n * @param {Node} node\t\t\tDOM Node to compare\n * @param {VNode} vnode\t\t\tVirtual DOM node to compare\n * @param {boolean} [hyrdating=false]\tIf true, ignores component constructors when comparing.\n * @private\n */\nexport function isSameNodeType(node, vnode, hydrating) {\n\tif (typeof vnode==='string' || typeof vnode==='number') {\n\t\treturn node.splitText!==undefined;\n\t}\n\tif (typeof vnode.nodeName==='string') {\n\t\treturn !node._componentConstructor && isNamedNode(node, vnode.nodeName);\n\t}\n\treturn hydrating || node._componentConstructor===vnode.nodeName;\n}\n\n\n/**\n * Check if an Element has a given nodeName, case-insensitively.\n *\n * @param {Element} node\tA DOM Element to inspect the name of.\n * @param {String} nodeName\tUnnormalized name to compare against.\n */\nexport function isNamedNode(node, nodeName) {\n\treturn node.normalizedNodeName===nodeName || node.nodeName.toLowerCase()===nodeName.toLowerCase();\n}\n\n\n/**\n * Reconstruct Component-style `props` from a VNode.\n * Ensures default/fallback values from `defaultProps`:\n * Own-properties of `defaultProps` not present in `vnode.attributes` are added.\n *\n * @param {VNode} vnode\n * @returns {Object} props\n */\nexport function getNodeProps(vnode) {\n\tlet props = extend({}, vnode.attributes);\n\tprops.children = vnode.children;\n\n\tlet defaultProps = vnode.nodeName.defaultProps;\n\tif (defaultProps!==undefined) {\n\t\tfor (let i in defaultProps) {\n\t\t\tif (props[i]===undefined) {\n\t\t\t\tprops[i] = defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn props;\n}\n","import { IS_NON_DIMENSIONAL } from '../constants';\nimport options from '../options';\n\n\n/** Create an element with the given nodeName.\n *\t@param {String} nodeName\n *\t@param {Boolean} [isSvg=false]\tIf `true`, creates an element within the SVG namespace.\n *\t@returns {Element} node\n */\nexport function createNode(nodeName, isSvg) {\n\tlet node = isSvg ? document.createElementNS('http://www.w3.org/2000/svg', nodeName) : document.createElement(nodeName);\n\tnode.normalizedNodeName = nodeName;\n\treturn node;\n}\n\n\n/** Remove a child node from its parent if attached.\n *\t@param {Element} node\t\tThe node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\n\n/** Set a named attribute on the given Node, with special behavior for some names and event handlers.\n *\tIf `value` is `null`, the attribute/handler will be removed.\n *\t@param {Element} node\tAn element to mutate\n *\t@param {string} name\tThe name/key to set, such as an event or attribute name\n *\t@param {any} old\tThe last value that was set for this name/node pair\n *\t@param {any} value\tAn attribute value, such as a function to be used as an event handler\n *\t@param {Boolean} isSvg\tAre we currently diffing inside an svg?\n *\t@private\n */\nexport function setAccessor(node, name, old, value, isSvg) {\n\tif (name==='className') name = 'class';\n\n\n\tif (name==='key') {\n\t\t// ignore\n\t}\n\telse if (name==='ref') {\n\t\tif (old) old(null);\n\t\tif (value) value(node);\n\t}\n\telse if (name==='class' && !isSvg) {\n\t\tnode.className = value || '';\n\t}\n\telse if (name==='style') {\n\t\tif (!value || typeof value==='string' || typeof old==='string') {\n\t\t\tnode.style.cssText = value || '';\n\t\t}\n\t\tif (value && typeof value==='object') {\n\t\t\tif (typeof old!=='string') {\n\t\t\t\tfor (let i in old) if (!(i in value)) node.style[i] = '';\n\t\t\t}\n\t\t\tfor (let i in value) {\n\t\t\t\tnode.style[i] = typeof value[i]==='number' && IS_NON_DIMENSIONAL.test(i)===false ? (value[i]+'px') : value[i];\n\t\t\t}\n\t\t}\n\t}\n\telse if (name==='dangerouslySetInnerHTML') {\n\t\tif (value) node.innerHTML = value.__html || '';\n\t}\n\telse if (name[0]=='o' && name[1]=='n') {\n\t\tlet useCapture = name !== (name=name.replace(/Capture$/, ''));\n\t\tname = name.toLowerCase().substring(2);\n\t\tif (value) {\n\t\t\tif (!old) node.addEventListener(name, eventProxy, useCapture);\n\t\t}\n\t\telse {\n\t\t\tnode.removeEventListener(name, eventProxy, useCapture);\n\t\t}\n\t\t(node._listeners || (node._listeners = {}))[name] = value;\n\t}\n\telse if (name!=='list' && name!=='type' && !isSvg && name in node) {\n\t\tsetProperty(node, name, value==null ? '' : value);\n\t\tif (value==null || value===false) node.removeAttribute(name);\n\t}\n\telse {\n\t\tlet ns = isSvg && (name !== (name = name.replace(/^xlink\\:?/, '')));\n\t\tif (value==null || value===false) {\n\t\t\tif (ns) node.removeAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase());\n\t\t\telse node.removeAttribute(name);\n\t\t}\n\t\telse if (typeof value!=='function') {\n\t\t\tif (ns) node.setAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase(), value);\n\t\t\telse node.setAttribute(name, value);\n\t\t}\n\t}\n}\n\n\n/** Attempt to set a DOM property to the given value.\n *\tIE & FF throw for certain property-value combinations.\n */\nfunction setProperty(node, name, value) {\n\ttry {\n\t\tnode[name] = value;\n\t} catch (e) { }\n}\n\n\n/** Proxy an event to hooked event handlers\n *\t@private\n */\nfunction eventProxy(e) {\n\treturn this._listeners[e.type](options.event && options.event(e) || e);\n}\n","import { ATTR_KEY } from '../constants';\nimport { isSameNodeType, isNamedNode } from './index';\nimport { buildComponentFromVNode } from './component';\nimport { createNode, setAccessor } from '../dom/index';\nimport { unmountComponent } from './component';\nimport options from '../options';\nimport { removeNode } from '../dom/index';\n\n/** Queue of components that have been mounted and are awaiting componentDidMount */\nexport const mounts = [];\n\n/** Diff recursion count, used to track the end of the diff cycle. */\nexport let diffLevel = 0;\n\n/** Global flag indicating if the diff is currently within an SVG */\nlet isSvgMode = false;\n\n/** Global flag indicating if the diff is performing hydration */\nlet hydrating = false;\n\n/** Invoke queued componentDidMount lifecycle methods */\nexport function flushMounts() {\n\tlet c;\n\twhile ((c=mounts.pop())) {\n\t\tif (options.afterMount) options.afterMount(c);\n\t\tif (c.componentDidMount) c.componentDidMount();\n\t}\n}\n\n\n/** Apply differences in a given vnode (and it's deep children) to a real DOM Node.\n *\t@param {Element} [dom=null]\t\tA DOM node to mutate into the shape of the `vnode`\n *\t@param {VNode} vnode\t\t\tA VNode (with descendants forming a tree) representing the desired DOM structure\n *\t@returns {Element} dom\t\t\tThe created/mutated element\n *\t@private\n */\nexport function diff(dom, vnode, context, mountAll, parent, componentRoot) {\n\t// diffLevel having been 0 here indicates initial entry into the diff (not a subdiff)\n\tif (!diffLevel++) {\n\t\t// when first starting the diff, check if we're diffing an SVG or within an SVG\n\t\tisSvgMode = parent!=null && parent.ownerSVGElement!==undefined;\n\n\t\t// hydration is indicated by the existing element to be diffed not having a prop cache\n\t\thydrating = dom!=null && !(ATTR_KEY in dom);\n\t}\n\n\tlet ret = idiff(dom, vnode, context, mountAll, componentRoot);\n\n\t// append the element if its a new parent\n\tif (parent && ret.parentNode!==parent) parent.appendChild(ret);\n\n\t// diffLevel being reduced to 0 means we're exiting the diff\n\tif (!--diffLevel) {\n\t\thydrating = false;\n\t\t// invoke queued componentDidMount lifecycle methods\n\t\tif (!componentRoot) flushMounts();\n\t}\n\n\treturn ret;\n}\n\n\n/** Internals of `diff()`, separated to allow bypassing diffLevel / mount flushing. */\nfunction idiff(dom, vnode, context, mountAll, componentRoot) {\n\tlet out = dom,\n\t\tprevSvgMode = isSvgMode;\n\n\t// empty values (null, undefined, booleans) render as empty Text nodes\n\tif (vnode==null || typeof vnode==='boolean') vnode = '';\n\n\n\t// Fast case: Strings & Numbers create/update Text nodes.\n\tif (typeof vnode==='string' || typeof vnode==='number') {\n\n\t\t// update if it's already a Text node:\n\t\tif (dom && dom.splitText!==undefined && dom.parentNode && (!dom._component || componentRoot)) {\n\t\t\t/* istanbul ignore if */ /* Browser quirk that can't be covered: https://github.com/developit/preact/commit/fd4f21f5c45dfd75151bd27b4c217d8003aa5eb9 */\n\t\t\tif (dom.nodeValue!=vnode) {\n\t\t\t\tdom.nodeValue = vnode;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// it wasn't a Text node: replace it with one and recycle the old Element\n\t\t\tout = document.createTextNode(vnode);\n\t\t\tif (dom) {\n\t\t\t\tif (dom.parentNode) dom.parentNode.replaceChild(out, dom);\n\t\t\t\trecollectNodeTree(dom, true);\n\t\t\t}\n\t\t}\n\n\t\tout[ATTR_KEY] = true;\n\n\t\treturn out;\n\t}\n\n\n\t// If the VNode represents a Component, perform a component diff:\n\tlet vnodeName = vnode.nodeName;\n\tif (typeof vnodeName==='function') {\n\t\treturn buildComponentFromVNode(dom, vnode, context, mountAll);\n\t}\n\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tisSvgMode = vnodeName==='svg' ? true : vnodeName==='foreignObject' ? false : isSvgMode;\n\n\n\t// If there's no existing element or it's the wrong type, create a new one:\n\tvnodeName = String(vnodeName);\n\tif (!dom || !isNamedNode(dom, vnodeName)) {\n\t\tout = createNode(vnodeName, isSvgMode);\n\n\t\tif (dom) {\n\t\t\t// move children into the replacement node\n\t\t\twhile (dom.firstChild) out.appendChild(dom.firstChild);\n\n\t\t\t// if the previous Element was mounted into the DOM, replace it inline\n\t\t\tif (dom.parentNode) dom.parentNode.replaceChild(out, dom);\n\n\t\t\t// recycle the old element (skips non-Element node types)\n\t\t\trecollectNodeTree(dom, true);\n\t\t}\n\t}\n\n\n\tlet fc = out.firstChild,\n\t\tprops = out[ATTR_KEY],\n\t\tvchildren = vnode.children;\n\n\tif (props==null) {\n\t\tprops = out[ATTR_KEY] = {};\n\t\tfor (let a=out.attributes, i=a.length; i--; ) props[a[i].name] = a[i].value;\n\t}\n\n\t// Optimization: fast-path for elements containing a single TextNode:\n\tif (!hydrating && vchildren && vchildren.length===1 && typeof vchildren[0]==='string' && fc!=null && fc.splitText!==undefined && fc.nextSibling==null) {\n\t\tif (fc.nodeValue!=vchildren[0]) {\n\t\t\tfc.nodeValue = vchildren[0];\n\t\t}\n\t}\n\t// otherwise, if there are existing or new children, diff them:\n\telse if (vchildren && vchildren.length || fc!=null) {\n\t\tinnerDiffNode(out, vchildren, context, mountAll, hydrating || props.dangerouslySetInnerHTML!=null);\n\t}\n\n\n\t// Apply attributes/props from VNode to the DOM Element:\n\tdiffAttributes(out, vnode.attributes, props);\n\n\n\t// restore previous SVG mode: (in case we're exiting an SVG namespace)\n\tisSvgMode = prevSvgMode;\n\n\treturn out;\n}\n\n\n/** Apply child and attribute changes between a VNode and a DOM Node to the DOM.\n *\t@param {Element} dom\t\t\tElement whose children should be compared & mutated\n *\t@param {Array} vchildren\t\tArray of VNodes to compare to `dom.childNodes`\n *\t@param {Object} context\t\t\tImplicitly descendant context object (from most recent `getChildContext()`)\n *\t@param {Boolean} mountAll\n *\t@param {Boolean} isHydrating\tIf `true`, consumes externally created elements similar to hydration\n */\nfunction innerDiffNode(dom, vchildren, context, mountAll, isHydrating) {\n\tlet originalChildren = dom.childNodes,\n\t\tchildren = [],\n\t\tkeyed = {},\n\t\tkeyedLen = 0,\n\t\tmin = 0,\n\t\tlen = originalChildren.length,\n\t\tchildrenLen = 0,\n\t\tvlen = vchildren ? vchildren.length : 0,\n\t\tj, c, f, vchild, child;\n\n\t// Build up a map of keyed children and an Array of unkeyed children:\n\tif (len!==0) {\n\t\tfor (let i=0; i<len; i++) {\n\t\t\tlet child = originalChildren[i],\n\t\t\t\tprops = child[ATTR_KEY],\n\t\t\t\tkey = vlen && props ? child._component ? child._component.__key : props.key : null;\n\t\t\tif (key!=null) {\n\t\t\t\tkeyedLen++;\n\t\t\t\tkeyed[key] = child;\n\t\t\t}\n\t\t\telse if (props || (child.splitText!==undefined ? (isHydrating ? child.nodeValue.trim() : true) : isHydrating)) {\n\t\t\t\tchildren[childrenLen++] = child;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (vlen!==0) {\n\t\tfor (let i=0; i<vlen; i++) {\n\t\t\tvchild = vchildren[i];\n\t\t\tchild = null;\n\n\t\t\t// attempt to find a node based on key matching\n\t\t\tlet key = vchild.key;\n\t\t\tif (key!=null) {\n\t\t\t\tif (keyedLen && keyed[key]!==undefined) {\n\t\t\t\t\tchild = keyed[key];\n\t\t\t\t\tkeyed[key] = undefined;\n\t\t\t\t\tkeyedLen--;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// attempt to pluck a node of the same type from the existing children\n\t\t\telse if (!child && min<childrenLen) {\n\t\t\t\tfor (j=min; j<childrenLen; j++) {\n\t\t\t\t\tif (children[j]!==undefined && isSameNodeType(c = children[j], vchild, isHydrating)) {\n\t\t\t\t\t\tchild = c;\n\t\t\t\t\t\tchildren[j] = undefined;\n\t\t\t\t\t\tif (j===childrenLen-1) childrenLen--;\n\t\t\t\t\t\tif (j===min) min++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// morph the matched/found/created DOM child to match vchild (deep)\n\t\t\tchild = idiff(child, vchild, context, mountAll);\n\n\t\t\tf = originalChildren[i];\n\t\t\tif (child && child!==dom && child!==f) {\n\t\t\t\tif (f==null) {\n\t\t\t\t\tdom.appendChild(child);\n\t\t\t\t}\n\t\t\t\telse if (child===f.nextSibling) {\n\t\t\t\t\tremoveNode(f);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdom.insertBefore(child, f);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\t// remove unused keyed children:\n\tif (keyedLen) {\n\t\tfor (let i in keyed) if (keyed[i]!==undefined) recollectNodeTree(keyed[i], false);\n\t}\n\n\t// remove orphaned unkeyed children:\n\twhile (min<=childrenLen) {\n\t\tif ((child = children[childrenLen--])!==undefined) recollectNodeTree(child, false);\n\t}\n}\n\n\n\n/** Recursively recycle (or just unmount) a node and its descendants.\n *\t@param {Node} node\t\t\t\t\t\tDOM node to start unmount/removal from\n *\t@param {Boolean} [unmountOnly=false]\tIf `true`, only triggers unmount lifecycle, skips removal\n */\nexport function recollectNodeTree(node, unmountOnly) {\n\tlet component = node._component;\n\tif (component) {\n\t\t// if node is owned by a Component, unmount that component (ends up recursing back here)\n\t\tunmountComponent(component);\n\t}\n\telse {\n\t\t// If the node's VNode had a ref function, invoke it with null here.\n\t\t// (this is part of the React spec, and smart for unsetting references)\n\t\tif (node[ATTR_KEY]!=null && node[ATTR_KEY].ref) node[ATTR_KEY].ref(null);\n\n\t\tif (unmountOnly===false || node[ATTR_KEY]==null) {\n\t\t\tremoveNode(node);\n\t\t}\n\n\t\tremoveChildren(node);\n\t}\n}\n\n\n/** Recollect/unmount all children.\n *\t- we use .lastChild here because it causes less reflow than .firstChild\n *\t- it's also cheaper than accessing the .childNodes Live NodeList\n */\nexport function removeChildren(node) {\n\tnode = node.lastChild;\n\twhile (node) {\n\t\tlet next = node.previousSibling;\n\t\trecollectNodeTree(node, true);\n\t\tnode = next;\n\t}\n}\n\n\n/** Apply differences in attributes from a VNode to the given DOM Element.\n *\t@param {Element} dom\t\tElement with attributes to diff `attrs` against\n *\t@param {Object} attrs\t\tThe desired end-state key-value attribute pairs\n *\t@param {Object} old\t\t\tCurrent/previous attributes (from previous VNode or element's prop cache)\n */\nfunction diffAttributes(dom, attrs, old) {\n\tlet name;\n\n\t// remove attributes no longer present on the vnode by setting them to undefined\n\tfor (name in old) {\n\t\tif (!(attrs && attrs[name]!=null) && old[name]!=null) {\n\t\t\tsetAccessor(dom, name, old[name], old[name] = undefined, isSvgMode);\n\t\t}\n\t}\n\n\t// add new & update changed attributes\n\tfor (name in attrs) {\n\t\tif (name!=='children' && name!=='innerHTML' && (!(name in old) || attrs[name]!==(name==='value' || name==='checked' ? dom[name] : old[name]))) {\n\t\t\tsetAccessor(dom, name, old[name], old[name] = attrs[name], isSvgMode);\n\t\t}\n\t}\n}\n","import { Component } from '../component';\n\n/** Retains a pool of Components for re-use, keyed on component name.\n *\tNote: since component names are not unique or even necessarily available, these are primarily a form of sharding.\n *\t@private\n */\nconst components = {};\n\n\n/** Reclaim a component for later re-use by the recycler. */\nexport function collectComponent(component) {\n\tlet name = component.constructor.name;\n\t(components[name] || (components[name] = [])).push(component);\n}\n\n\n/** Create a component. Normalizes differences between PFC's and classful Components. */\nexport function createComponent(Ctor, props, context) {\n\tlet list = components[Ctor.name],\n\t\tinst;\n\n\tif (Ctor.prototype && Ctor.prototype.render) {\n\t\tinst = new Ctor(props, context);\n\t\tComponent.call(inst, props, context);\n\t}\n\telse {\n\t\tinst = new Component(props, context);\n\t\tinst.constructor = Ctor;\n\t\tinst.render = doRender;\n\t}\n\n\n\tif (list) {\n\t\tfor (let i=list.length; i--; ) {\n\t\t\tif (list[i].constructor===Ctor) {\n\t\t\t\tinst.nextBase = list[i].nextBase;\n\t\t\t\tlist.splice(i, 1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn inst;\n}\n\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n","import { SYNC_RENDER, NO_RENDER, FORCE_RENDER, ASYNC_RENDER, ATTR_KEY } from '../constants';\nimport options from '../options';\nimport { extend } from '../util';\nimport { enqueueRender } from '../render-queue';\nimport { getNodeProps } from './index';\nimport { diff, mounts, diffLevel, flushMounts, recollectNodeTree, removeChildren } from './diff';\nimport { createComponent, collectComponent } from './component-recycler';\nimport { removeNode } from '../dom/index';\n\n/** Set a component's `props` (generally derived from JSX attributes).\n *\t@param {Object} props\n *\t@param {Object} [opts]\n *\t@param {boolean} [opts.renderSync=false]\tIf `true` and {@link options.syncComponentUpdates} is `true`, triggers synchronous rendering.\n *\t@param {boolean} [opts.render=true]\t\t\tIf `false`, no render will be triggered.\n */\nexport function setComponentProps(component, props, opts, context, mountAll) {\n\tif (component._disable) return;\n\tcomponent._disable = true;\n\n\tif ((component.__ref = props.ref)) delete props.ref;\n\tif ((component.__key = props.key)) delete props.key;\n\n\tif (!component.base || mountAll) {\n\t\tif (component.componentWillMount) component.componentWillMount();\n\t}\n\telse if (component.componentWillReceiveProps) {\n\t\tcomponent.componentWillReceiveProps(props, context);\n\t}\n\n\tif (context && context!==component.context) {\n\t\tif (!component.prevContext) component.prevContext = component.context;\n\t\tcomponent.context = context;\n\t}\n\n\tif (!component.prevProps) component.prevProps = component.props;\n\tcomponent.props = props;\n\n\tcomponent._disable = false;\n\n\tif (opts!==NO_RENDER) {\n\t\tif (opts===SYNC_RENDER || options.syncComponentUpdates!==false || !component.base) {\n\t\t\trenderComponent(component, SYNC_RENDER, mountAll);\n\t\t}\n\t\telse {\n\t\t\tenqueueRender(component);\n\t\t}\n\t}\n\n\tif (component.__ref) component.__ref(component);\n}\n\n\n\n/** Render a Component, triggering necessary lifecycle events and taking High-Order Components into account.\n *\t@param {Component} component\n *\t@param {Object} [opts]\n *\t@param {boolean} [opts.build=false]\t\tIf `true`, component will build and store a DOM node if not already associated with one.\n *\t@private\n */\nexport function renderComponent(component, opts, mountAll, isChild) {\n\tif (component._disable) return;\n\n\tlet props = component.props,\n\t\tstate = component.state,\n\t\tcontext = component.context,\n\t\tpreviousProps = component.prevProps || props,\n\t\tpreviousState = component.prevState || state,\n\t\tpreviousContext = component.prevContext || context,\n\t\tisUpdate = component.base,\n\t\tnextBase = component.nextBase,\n\t\tinitialBase = isUpdate || nextBase,\n\t\tinitialChildComponent = component._component,\n\t\tskip = false,\n\t\trendered, inst, cbase;\n\n\t// if updating\n\tif (isUpdate) {\n\t\tcomponent.props = previousProps;\n\t\tcomponent.state = previousState;\n\t\tcomponent.context = previousContext;\n\t\tif (opts!==FORCE_RENDER\n\t\t\t&& component.shouldComponentUpdate\n\t\t\t&& component.shouldComponentUpdate(props, state, context) === false) {\n\t\t\tskip = true;\n\t\t}\n\t\telse if (component.componentWillUpdate) {\n\t\t\tcomponent.componentWillUpdate(props, state, context);\n\t\t}\n\t\tcomponent.props = props;\n\t\tcomponent.state = state;\n\t\tcomponent.context = context;\n\t}\n\n\tcomponent.prevProps = component.prevState = component.prevContext = component.nextBase = null;\n\tcomponent._dirty = false;\n\n\tif (!skip) {\n\t\trendered = component.render(props, state, context);\n\n\t\t// context to pass to the child, can be updated via (grand-)parent component\n\t\tif (component.getChildContext) {\n\t\t\tcontext = extend(extend({}, context), component.getChildContext());\n\t\t}\n\n\t\tlet childComponent = rendered && rendered.nodeName,\n\t\t\ttoUnmount, base;\n\n\t\tif (typeof childComponent==='function') {\n\t\t\t// set up high order component link\n\n\t\t\tlet childProps = getNodeProps(rendered);\n\t\t\tinst = initialChildComponent;\n\n\t\t\tif (inst && inst.constructor===childComponent && childProps.key==inst.__key) {\n\t\t\t\tsetComponentProps(inst, childProps, SYNC_RENDER, context, false);\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttoUnmount = inst;\n\n\t\t\t\tcomponent._component = inst = createComponent(childComponent, childProps, context);\n\t\t\t\tinst.nextBase = inst.nextBase || nextBase;\n\t\t\t\tinst._parentComponent = component;\n\t\t\t\tsetComponentProps(inst, childProps, NO_RENDER, context, false);\n\t\t\t\trenderComponent(inst, SYNC_RENDER, mountAll, true);\n\t\t\t}\n\n\t\t\tbase = inst.base;\n\t\t}\n\t\telse {\n\t\t\tcbase = initialBase;\n\n\t\t\t// destroy high order component link\n\t\t\ttoUnmount = initialChildComponent;\n\t\t\tif (toUnmount) {\n\t\t\t\tcbase = component._component = null;\n\t\t\t}\n\n\t\t\tif (initialBase || opts===SYNC_RENDER) {\n\t\t\t\tif (cbase) cbase._component = null;\n\t\t\t\tbase = diff(cbase, rendered, context, mountAll || !isUpdate, initialBase && initialBase.parentNode, true);\n\t\t\t}\n\t\t}\n\n\t\tif (initialBase && base!==initialBase && inst!==initialChildComponent) {\n\t\t\tlet baseParent = initialBase.parentNode;\n\t\t\tif (baseParent && base!==baseParent) {\n\t\t\t\tbaseParent.replaceChild(base, initialBase);\n\n\t\t\t\tif (!toUnmount) {\n\t\t\t\t\tinitialBase._component = null;\n\t\t\t\t\trecollectNodeTree(initialBase, false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (toUnmount) {\n\t\t\tunmountComponent(toUnmount);\n\t\t}\n\n\t\tcomponent.base = base;\n\t\tif (base && !isChild) {\n\t\t\tlet componentRef = component,\n\t\t\t\tt = component;\n\t\t\twhile ((t=t._parentComponent)) {\n\t\t\t\t(componentRef = t).base = base;\n\t\t\t}\n\t\t\tbase._component = componentRef;\n\t\t\tbase._componentConstructor = componentRef.constructor;\n\t\t}\n\t}\n\n\tif (!isUpdate || mountAll) {\n\t\tmounts.unshift(component);\n\t}\n\telse if (!skip) {\n\t\t// Ensure that pending componentDidMount() hooks of child components\n\t\t// are called before the componentDidUpdate() hook in the parent.\n\t\t// Note: disabled as it causes duplicate hooks, see https://github.com/developit/preact/issues/750\n\t\t// flushMounts();\n\n\t\tif (component.componentDidUpdate) {\n\t\t\tcomponent.componentDidUpdate(previousProps, previousState, previousContext);\n\t\t}\n\t\tif (options.afterUpdate) options.afterUpdate(component);\n\t}\n\n\tif (component._renderCallbacks!=null) {\n\t\twhile (component._renderCallbacks.length) component._renderCallbacks.pop().call(component);\n\t}\n\n\tif (!diffLevel && !isChild) flushMounts();\n}\n\n\n\n/** Apply the Component referenced by a VNode to the DOM.\n *\t@param {Element} dom\tThe DOM node to mutate\n *\t@param {VNode} vnode\tA Component-referencing VNode\n *\t@returns {Element} dom\tThe created/mutated element\n *\t@private\n */\nexport function buildComponentFromVNode(dom, vnode, context, mountAll) {\n\tlet c = dom && dom._component,\n\t\toriginalComponent = c,\n\t\toldDom = dom,\n\t\tisDirectOwner = c && dom._componentConstructor===vnode.nodeName,\n\t\tisOwner = isDirectOwner,\n\t\tprops = getNodeProps(vnode);\n\twhile (c && !isOwner && (c=c._parentComponent)) {\n\t\tisOwner = c.constructor===vnode.nodeName;\n\t}\n\n\tif (c && isOwner && (!mountAll || c._component)) {\n\t\tsetComponentProps(c, props, ASYNC_RENDER, context, mountAll);\n\t\tdom = c.base;\n\t}\n\telse {\n\t\tif (originalComponent && !isDirectOwner) {\n\t\t\tunmountComponent(originalComponent);\n\t\t\tdom = oldDom = null;\n\t\t}\n\n\t\tc = createComponent(vnode.nodeName, props, context);\n\t\tif (dom && !c.nextBase) {\n\t\t\tc.nextBase = dom;\n\t\t\t// passing dom/oldDom as nextBase will recycle it if unused, so bypass recycling on L229:\n\t\t\toldDom = null;\n\t\t}\n\t\tsetComponentProps(c, props, SYNC_RENDER, context, mountAll);\n\t\tdom = c.base;\n\n\t\tif (oldDom && dom!==oldDom) {\n\t\t\toldDom._component = null;\n\t\t\trecollectNodeTree(oldDom, false);\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n\n\n/** Remove a component from the DOM and recycle it.\n *\t@param {Component} component\tThe Component instance to unmount\n *\t@private\n */\nexport function unmountComponent(component) {\n\tif (options.beforeUnmount) options.beforeUnmount(component);\n\n\tlet base = component.base;\n\n\tcomponent._disable = true;\n\n\tif (component.componentWillUnmount) component.componentWillUnmount();\n\n\tcomponent.base = null;\n\n\t// recursively tear down & recollect high-order component children:\n\tlet inner = component._component;\n\tif (inner) {\n\t\tunmountComponent(inner);\n\t}\n\telse if (base) {\n\t\tif (base[ATTR_KEY] && base[ATTR_KEY].ref) base[ATTR_KEY].ref(null);\n\n\t\tcomponent.nextBase = base;\n\n\t\tremoveNode(base);\n\t\tcollectComponent(component);\n\n\t\tremoveChildren(base);\n\t}\n\n\tif (component.__ref) component.__ref(null);\n}\n","import { FORCE_RENDER } from './constants';\nimport { extend } from './util';\nimport { renderComponent } from './vdom/component';\nimport { enqueueRender } from './render-queue';\n\n/** Base Component class.\n *\tProvides `setState()` and `forceUpdate()`, which trigger rendering.\n *\t@public\n *\n *\t@example\n *\tclass MyFoo extends Component {\n *\t\trender(props, state) {\n *\t\t\treturn <div />;\n *\t\t}\n *\t}\n */\nexport function Component(props, context) {\n\tthis._dirty = true;\n\n\t/** @public\n\t *\t@type {object}\n\t */\n\tthis.context = context;\n\n\t/** @public\n\t *\t@type {object}\n\t */\n\tthis.props = props;\n\n\t/** @public\n\t *\t@type {object}\n\t */\n\tthis.state = this.state || {};\n}\n\n\nextend(Component.prototype, {\n\n\t/** Returns a `boolean` indicating if the component should re-render when receiving the given `props` and `state`.\n\t *\t@param {object} nextProps\n\t *\t@param {object} nextState\n\t *\t@param {object} nextContext\n\t *\t@returns {Boolean} should the component re-render\n\t *\t@name shouldComponentUpdate\n\t *\t@function\n\t */\n\n\n\t/** Update component state by copying properties from `state` to `this.state`.\n\t *\t@param {object} state\t\tA hash of state properties to update with new values\n\t *\t@param {function} callback\tA function to be called once component state is updated\n\t */\n\tsetState(state, callback) {\n\t\tlet s = this.state;\n\t\tif (!this.prevState) this.prevState = extend({}, s);\n\t\textend(s, typeof state==='function' ? state(s, this.props) : state);\n\t\tif (callback) (this._renderCallbacks = (this._renderCallbacks || [])).push(callback);\n\t\tenqueueRender(this);\n\t},\n\n\n\t/** Immediately perform a synchronous re-render of the component.\n\t *\t@param {function} callback\t\tA function to be called after component is re-rendered.\n\t *\t@private\n\t */\n\tforceUpdate(callback) {\n\t\tif (callback) (this._renderCallbacks = (this._renderCallbacks || [])).push(callback);\n\t\trenderComponent(this, FORCE_RENDER);\n\t},\n\n\n\t/** Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n\t *\tVirtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n\t *\t@param {object} props\t\tProps (eg: JSX attributes) received from parent element/component\n\t *\t@param {object} state\t\tThe component's current state\n\t *\t@param {object} context\t\tContext object (if a parent component has provided context)\n\t *\t@returns VNode\n\t */\n\trender() {}\n\n});\n","/**\n * @param {String} [coords]\n * @returns {Promise<any>}\n */\nfunction getWeatherData(coords) {\n    return new Promise((resolve, reject) => {\n        fetch(`/api/weather${coords ? `/${coords}` : ''}`)\n            .then(response => response.json())\n            .then(response => resolve(response))\n            .catch(reject);\n    });\n}\n\nexport default {\n    getWeatherData\n};\n","/**\n * Takes raw geoloaction result and parses it into a simple object\n * @param {Object} position\n * @returns {{lat: string|number, lon: string|number}}\n */\nfunction positionToObject(position) {\n    return {\n        lat: position.coords.latitude,\n        lon: position.coords.longitude\n    };\n}\n\nfunction getGeoPosition() {\n    return new Promise((resolve, reject) => {\n        // resolve({\n        //     lat: 51.4649087,\n        //     lon: -0.0126483\n        // });\n        navigator.geolocation.getCurrentPosition((position) => {\n            resolve(positionToObject(position));\n        }, reject);\n    });\n}\n\nexport default {\n    positionToObject,\n    getGeoPosition\n};\n","import { h } from 'preact';\nimport './Card.css';\n\nconst Card = props => {\n    const classes = ['card', props.className || ''].join(' ');\n\n    return (\n        <div className={classes}>\n            {props.children}\n        </div>\n    );\n};\n\nexport default Card;\n","import { h } from 'preact';\n\nconst styling = {\n    marginBottom: '10px'\n};\n\nconst CardHeader = props => (\n    <div style={Object.assign(styling, props.style)}>\n        {props.children}\n    </div>\n);\n\nexport default CardHeader;\n","import { h } from 'preact';\n\nconst styling = {\n    fontWeight: 700,\n    color: '#3C4858'\n};\n\nconst CardTitle = props => (\n    <h2 style={styling}>\n        {props.children}\n    </h2>\n);\n\nexport default CardTitle;\n","import { h } from 'preact';\n\nconst CardLoading = () => (\n    <div>\n        Loading...\n    </div>\n);\n\nexport default CardLoading;\n","import { h } from 'preact';\nimport './Weather.css';\n\nconst WeatherRow = (props) => {\n    const row = props.row;\n    const hourOfWeather = `${row.hour < 10 ? '0' : ''}${row.hour}:00 `;\n\n    return (\n        <p key={row.hour} className={`rain rain-${row.pop}`}>\n            {hourOfWeather}\n            - ☀️ {row.feelsLike}°\n            / 💦 {row.pop}%\n            / 💨 {row.windSpeed}mph\n            / {row.condition}\n        </p>\n    );\n};\n\nexport default WeatherRow;\n","import { h } from 'preact';\n\nconst CardInner = (props) => {\n    const styling = Object.assign(props.style || {}, {\n        borderRadius: '10px',\n        background: '#E5E9F2',\n        position: 'relative',\n        boxShadow: '0 1px 2px 0 rgba(31,45,61,.15)'\n    });\n\n    if (props.withPadding) {\n        styling.padding = '10px';\n    }\n\n    return (\n        <div style={styling} className={props.className}>\n            {props.children}\n        </div>\n    );\n};\n\nexport default CardInner;\n","import { h } from 'preact';\n\nconst WeatherViewMore = (props) => {\n    const styling = {\n        position: 'absolute',\n        top: '10px',\n        right: '10px'\n    };\n\n    if (!props.isVisible) {\n        styling.display = 'none';\n    }\n\n    return (\n        <a href=\"\" onClick={props.onClick} style={styling}>\n            Further ahead &gt;\n        </a>\n    );\n};\n\nexport default WeatherViewMore;\n","import Mitt from 'mitt';\n\nconst emitter = Mitt();\n\nexport default {\n    subscribe: emitter.on,\n    publish: emitter.emit\n};\n","export default {\n    STATION_SELECT_OPEN: 'Open station select',\n    STATION_SELECT_CLOSE: 'Close station select',\n    STATION_SELECT: 'Station selected',\n    REFRESH: 'Refresh data'\n};\n","import { h, Component } from 'preact';\nimport './Weather.css';\n\nimport WeatherService from '../../services/WeatherService';\nimport GeoService from '../../services/GeoService';\n\nimport Card from '../../components/Card';\nimport CardHeader from '../../components/CardHeader';\nimport CardTitle from '../../components/CardTitle';\nimport CardLoading from '../../components/CardLoading';\nimport WeatherRow from '../../components/WeatherRow';\nimport CardInner from '../../components/CardInner';\nimport WeatherViewMore from '../../components/WeatherViewMore';\nimport PubSub from '../../services/PubSub';\nimport Constants from '../../services/Constants';\n\nclass Weather extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            weather: null,\n            limit: 12\n        };\n\n        this.increaseLimit = this.increaseLimit.bind(this);\n        this.getGeoData = this.getGeoData.bind(this);\n    }\n\n    componentDidMount() {\n        PubSub.subscribe(Constants.REFRESH, this.getGeoData);\n        this.getGeoData();\n    }\n\n    getGeoData() {\n        this.setState({\n            weather: null\n        });\n\n        GeoService.getGeoPosition()\n            .then((coords) => {\n                this.getWeatherData(`${coords.lat},${coords.lon}`);\n            })\n            .catch(() => {\n                this.getWeatherData();\n            });\n    }\n\n    /**\n     * getWeatherData\n     * @param {String} [coords]\n     */\n    getWeatherData(coords) {\n        this.setState({\n            weather: null\n        });\n\n        WeatherService.getWeatherData(coords)\n            .then((response) => {\n                this.setState({\n                    weather: response.data\n                });\n            });\n    }\n\n    /**\n     * increaseLimit\n     * @param {Event} event\n     */\n    increaseLimit(event) {\n        event.preventDefault();\n\n        this.setState({\n            limit: 24\n        });\n    }\n\n    render() {\n        const hasData = !!this.state.weather;\n        const shouldShowViewMore = this.state.limit !== 24;\n        const weatherRows = hasData && this.state.weather.slice(0, this.state.limit);\n\n        return (\n            <Card>\n                <CardHeader style={{ position: 'relative' }}>\n                    <CardTitle>Weather</CardTitle>\n                    {\n                        hasData &&\n                        <WeatherViewMore onClick={this.increaseLimit} isVisible={shouldShowViewMore} />\n                    }\n                </CardHeader>\n                {\n                    hasData &&\n                    <CardInner className=\"fade-out\">\n                        <div style={{ overflowX: 'scroll' }}>\n                            {\n                                weatherRows.map(row => <WeatherRow row={row} />)\n                            }\n                        </div>\n                    </CardInner>\n                }\n                {\n                    !hasData &&\n                    <CardLoading />\n                }\n            </Card>\n        );\n    }\n}\n\nexport default Weather;\n","function getTubeData() {\n    return new Promise((resolve, reject) => {\n        fetch('/api/tube')\n            .then(response => response.json())\n            .then(response => resolve(response))\n            .catch(reject);\n    });\n}\n\nexport default {\n    getTubeData\n};\n","import { h } from 'preact';\nimport './Tube.css';\n\nconst WeatherRow = (props) => {\n    const row = props.row;\n\n    return (\n        <p key={row.line} className={`line ${row.line}`}>\n            {row.disruption}\n        </p>\n    );\n};\n\nexport default WeatherRow;\n","import { h, Component } from 'preact';\n\nimport TubeService from '../../services/TubeService';\nimport Card from '../../components/Card';\nimport CardHeader from '../../components/CardHeader';\nimport CardTitle from '../../components/CardTitle';\nimport CardLoading from '../../components/CardLoading';\nimport CardInner from '../../components/CardInner';\nimport TubeRow from '../../components/TubeRow';\nimport PubSub from '../../services/PubSub';\nimport Constants from '../../services/Constants';\n\nclass Tube extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            tube: null\n        };\n\n        this.getData = this.getData.bind(this);\n    }\n\n    componentDidMount() {\n        PubSub.subscribe(Constants.REFRESH, this.getGeoData);\n        this.getData();\n    }\n\n    getData() {\n        this.setState({\n            tube: null\n        });\n\n        TubeService.getTubeData()\n            .then((response) => {\n                this.setState({\n                    tube: response.data\n                });\n            });\n    }\n\n    render() {\n        const hasData = !!this.state.tube;\n\n        return (\n            <Card>\n                <CardHeader>\n                    <CardTitle>Tube</CardTitle>\n                </CardHeader>\n                {\n                    !hasData &&\n                    <CardLoading />\n                }\n                {\n                    hasData &&\n                    <CardInner>\n                        {this.state.tube.map(row => <TubeRow row={row} />)}\n                    </CardInner>\n                }\n            </Card>\n        );\n    }\n}\n\nexport default Tube;\n","let STATIONS = {};\n\nfunction getRailData(from = 'LEW', to = 'CHX', coords = '') {\n    const newCoords = coords ? `/${coords}` : '';\n\n    return new Promise((resolve, reject) => {\n        fetch(`/api/rail/${from}/${to}${newCoords}`)\n            .then(response => response.json())\n            .then(response => resolve(response))\n            .catch(reject);\n    });\n}\n\nfunction getStationsList(coords = '') {\n    const newCoords = coords ? `/${coords}` : '';\n\n    return new Promise((resolve, reject) => {\n        if (Object.keys(STATIONS).length) {\n            return resolve({ data: STATIONS });\n        }\n\n        return fetch(`/api/rail/stations${newCoords}`)\n            .then(response => response.json())\n            .then((response) => {\n                STATIONS = response.data;\n                resolve(response);\n            })\n            .catch(reject);\n    });\n}\n\nfunction filterStationsList(filterString) {\n    if (filterString === '' || filterString.length < 2) {\n        return STATIONS;\n    }\n\n    const foundEntries = {};\n    const searchString = filterString.toLowerCase();\n\n    Object.entries(STATIONS).forEach((entry) => {\n        const key = entry[0];\n        const value = entry[1].title || entry[1];\n\n        if (!foundEntries[key]) {\n            foundEntries[key] = {\n                value: '',\n                score: 0\n            };\n        }\n\n        if (key.toLowerCase().includes(searchString)) {\n            foundEntries[key].value = value;\n            foundEntries[key].score += 5;\n        }\n\n        if (value.toLowerCase() === searchString) {\n            foundEntries[key].value = value;\n            foundEntries[key].score += 2.5;\n        }\n\n        if (value.toLowerCase().startsWith(searchString)) {\n            foundEntries[key].value = value;\n            foundEntries[key].score += 1.5;\n        }\n\n        if (value.toLowerCase().includes(searchString)) {\n            foundEntries[key].value = value;\n            foundEntries[key].score += 1;\n        }\n    });\n\n    const toReturn = {};\n    Object.entries(foundEntries)\n        .sort((a, b) => {\n            if (a[1].score < b[1].score) {\n                return 1;\n            }\n\n            if (a[1].score > b[1].score) {\n                return -1;\n            }\n\n            return 0;\n        })\n        .map((element) => {\n            const objectToReturn = {};\n\n            objectToReturn[element[0]] = element[1].value;\n\n            return objectToReturn;\n        })\n        .filter(element => !!Object.values(element)[0])\n        .forEach((element) => {\n            const key = Object.keys(element)[0];\n            const value = Object.values(element)[0];\n\n            toReturn[key] = value;\n        });\n\n    return toReturn;\n}\n\nexport default {\n    getRailData,\n    getStationsList,\n    filterStationsList\n};\n","function parse() {\n    const data = {};\n\n    if (!window.location.search) {\n        return data;\n    }\n\n    window.location.search\n        .substring(1)\n        .split('&')\n        .forEach((element) => {\n            const queryStringParameter = element.split('=');\n            data[queryStringParameter[0]] = queryStringParameter[1];\n        });\n\n    return data;\n}\n\nfunction addOrUpdateQueryString(key, value) {\n    const parsed = parse();\n\n    parsed[key] = value;\n\n    const encoded = Object.entries(parsed).map(([k, v]) => `${k}=${v}`).join('&');\n    window.history.pushState({ path: `?${encoded}` }, '', `?${encoded}`);\n}\n\nexport default {\n    parse,\n    addOrUpdateQueryString\n};\n","import { h } from 'preact';\nimport CardInner from './CardInner';\n\nconst styling = {\n    marginBottom: '10px'\n};\n\nconst RailMessages = (props) => {\n    if (!props.messages.length) {\n        return null;\n    }\n\n    return (\n        <CardInner style={styling} withPadding>\n            {props.messages.map(row => (\n                <ul>\n                    <li dangerouslySetInnerHTML={{ __html: row }} />\n                </ul>\n            ))}\n        </CardInner>\n    );\n};\n\nexport default RailMessages;\n","import { h, Component } from 'preact';\nimport Constants from '../../services/Constants';\nimport PubSub from '../../services/PubSub';\nimport QueryString from '../../services/QueryString';\n\nimport './RailFromTo.css';\n\nclass RailFromTo extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            from: props.data.fromName,\n            to: props.data.toName\n        };\n\n        this.showStationSelector = this.showStationSelector.bind(this);\n        this.switchDirection = this.switchDirection.bind(this);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            from: nextProps.data.fromName,\n            to: nextProps.data.toName\n        });\n    }\n\n    showStationSelector(station) {\n        PubSub.publish(Constants.STATION_SELECT_OPEN, { stationToChange: station });\n    }\n\n    switchDirection() {\n        QueryString.addOrUpdateQueryString('from', this.props.data.to);\n        QueryString.addOrUpdateQueryString('to', this.props.data.from);\n\n        PubSub.publish(Constants.STATION_SELECT);\n    }\n\n    render() {\n        return (\n            <div>\n                <span className=\"selector\" onClick={() => this.showStationSelector('from')}>\n                    {this.state.from}\n                </span>\n                <span onClick={this.switchDirection}> &rarr; </span>\n                <span className=\"selector\" onClick={() => this.showStationSelector('to')}>\n                    {this.state.to}\n                </span>\n            </div>\n        );\n    }\n}\n\nexport default RailFromTo;\n","import { h } from 'preact';\n\nconst styling = {\n    padding: '5px 5px'\n};\n\nfunction getStatus(row) {\n    return row.cancelReason ? 'Cancelled' : row.etd;\n}\n\nfunction getStatusText(row) {\n    let toReturn = '';\n\n    if (row.cancelReason || row.delayReason) {\n        toReturn = `<br><small>${row.cancelReason || row.delayReason}</small>`;\n    }\n\n    return toReturn;\n}\n\nconst RailRow = (props) => {\n    const row = props.row;\n\n    const key = `${row.std}${row.etd}${row.platform}${row.from}${row.to}`;\n    const platform = row.platform ? ` / Platform ${row.platform}` : '';\n    const departureTime = row.std;\n    const trainStatus = getStatus(row);\n\n    return (\n        <p key={key} style={styling}>\n            {departureTime} ({trainStatus}) {platform}\n            <span dangerouslySetInnerHTML={{ __html: getStatusText(row) }} />\n        </p>\n    );\n};\n\nexport default RailRow;\n","import { h, Component } from 'preact';\n\nimport RailService from '../../services/RailService';\nimport GeoService from '../../services/GeoService';\nimport QueryString from '../../services/QueryString';\n\nimport RailMessages from '../../components/RailMessages';\nimport Card from '../../components/Card';\nimport CardHeader from '../../components/CardHeader';\nimport CardTitle from '../../components/CardTitle';\nimport CardLoading from '../../components/CardLoading';\nimport RailFromTo from '../../components/RailFromTo';\nimport CardInner from '../../components/CardInner';\nimport RailRow from '../../components/RailRow';\nimport PubSub from '../../services/PubSub';\nimport Constants from '../../services/Constants';\n\nclass Rail extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            rail: null,\n            limit: 6\n        };\n\n        this.getGeoRailData = this.getGeoRailData.bind(this);\n        this.getRailData = this.getRailData.bind(this);\n    }\n\n    componentDidMount() {\n        PubSub.subscribe(Constants.STATION_SELECT, this.getGeoRailData);\n        PubSub.subscribe(Constants.REFRESH, this.getGeoRailData);\n        this.getGeoRailData();\n    }\n\n    getGeoRailData() {\n        this.setState({\n            rail: null\n        });\n\n        const overrides = QueryString.parse();\n\n        const from = overrides.from || 'LEW';\n        const to = overrides.to || 'CHX';\n\n        if (overrides.from && overrides.to) {\n            this.getRailData(from, to);\n        } else {\n            GeoService.getGeoPosition()\n                .then((coords) => {\n                    this.getRailData(from, to, `${coords.lat},${coords.lon}`);\n                })\n                .catch(() => {\n                    this.getRailData(from, to);\n                });\n        }\n    }\n\n    getRailData(to, from, coords) {\n        this.setState({\n            rail: null\n        });\n\n        RailService.getRailData(to, from, coords)\n            .then((data) => {\n                this.setState({\n                    rail: data.data\n                });\n            });\n    }\n\n    renderRailTimes() {\n        const railRows = this.state.rail.times.slice(0, this.state.limit);\n        const hasItems = !!railRows.length;\n\n        return (\n            <CardInner withPadding>\n                {\n                    !hasItems &&\n                    <div>No trains found for this journey</div>\n                }\n                {\n                    railRows.map(row => <RailRow row={row} />)\n                }\n            </CardInner>\n        );\n    }\n\n    render() {\n        const hasData = !!this.state.rail;\n        const shouldShowMessages = hasData && this.state.rail.messages.length > 0;\n        const metadata = this.state.rail && this.state.rail.meta;\n\n        return (\n            <Card className=\"card--rail\">\n                <CardHeader>\n                    <CardTitle>\n                        {!hasData && 'Rail'}\n                        {\n                            hasData &&\n                            <RailFromTo data={metadata} stationsList={this.state.stationsList} />\n                        }\n                    </CardTitle>\n                </CardHeader>\n                {!hasData && <CardLoading />}\n                {\n                    (hasData && shouldShowMessages) &&\n                    <RailMessages messages={this.state.rail.messages} />\n                }\n                {hasData && this.renderRailTimes()}\n            </Card>\n        );\n    }\n}\n\nexport default Rail;\n","import { h, Component } from 'preact';\nimport './StationSelector.css';\n\nimport CardLoading from '../../../components/CardLoading';\n\nimport RailService from '../../../services/RailService';\nimport QueryString from '../../../services/QueryString';\nimport PubSub from '../../../services/PubSub';\nimport Constants from '../../../services/Constants';\nimport GeoService from '../../../services/GeoService';\n\nclass StationSelector extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            stationsList: [],\n            filterString: '',\n            stationToChange: props.data.stationToChange\n        };\n\n        this.onSearch = this.onSearch.bind(this);\n        this.onStationSelect = this.onStationSelect.bind(this);\n        this.closeModal = this.closeModal.bind(this);\n        this.escapeListener = this.escapeListener.bind(this);\n        this.getStationsList = this.getStationsList.bind(this);\n    }\n\n    componentDidMount() {\n        GeoService.getGeoPosition()\n            .then((coords) => {\n                this.getStationsList(`${coords.lat},${coords.lon}`);\n            })\n            .catch(() => {\n                this.getStationsList();\n            });\n\n        window.addEventListener('keyup', this.escapeListener);\n        document.getElementById('search').focus();\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('keyup', this.escapeListener);\n    }\n\n    onSearch(event) {\n        this.setState({\n            filterString: event.target.value\n        });\n    }\n\n    onStationSelect(stationCode) {\n        QueryString.addOrUpdateQueryString(this.state.stationToChange, stationCode);\n        PubSub.publish(Constants.STATION_SELECT);\n        this.closeModal();\n    }\n\n    getStationsList(coords) {\n        RailService.getStationsList(coords)\n            .then((response) => {\n                this.setState({\n                    stationsList: response.data\n                });\n            });\n    }\n\n    escapeListener(event) {\n        if (event.keyCode === 27) {\n            this.closeModal();\n        }\n    }\n\n    closeModal(event) {\n        if (!event || event.target.id === 'modal') {\n            PubSub.publish(Constants.STATION_SELECT_CLOSE);\n        }\n    }\n\n    render() {\n        const filtered = RailService.filterStationsList(this.state.filterString);\n        const data = Object.keys(filtered).map(stationCode => ({\n            code: stationCode,\n            title: filtered[stationCode].title || filtered[stationCode]\n        }));\n\n        return (\n            <div className=\"modal-container\" onClick={this.closeModal} id=\"modal\">\n                <div className=\"modal\">\n                    <input\n                        type=\"text\"\n                        className=\"search\"\n                        onKeyUp={this.onSearch}\n                        id=\"search\"\n                        value={this.state.filterString}\n                        placeholder=\"Search for a station\"\n                    />\n                    {\n                        !data.length &&\n                        <div className=\"station\">\n                            <CardLoading />\n                        </div>\n                    }\n                    {\n                        !!data.length &&\n                        <div className=\"stations\">\n                            {data.map(element => (\n                                <div className=\"station\" onClick={() => this.onStationSelect(element.code)}>\n                                    {element.title}\n                                </div>\n                            ))}\n                        </div>\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default StationSelector;\n","import { h, Component } from 'preact';\n\nimport StationSelector from './StationSelector';\n\nimport PubSub from '../../services/PubSub';\nimport Constants from '../../services/Constants';\n\nclass Modal extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            modals: []\n        };\n\n        this.removeModal = this.removeModal.bind(this);\n        this.lockScrolling = this.lockScrolling.bind(this);\n        this.unlockScrolling = this.unlockScrolling.bind(this);\n    }\n\n    componentDidMount() {\n        PubSub.subscribe(Constants.STATION_SELECT_OPEN, (data) => {\n            const newModals = this.state.modals;\n            newModals.push(<StationSelector key=\"stationSelector\" data={data} />);\n            this.setState({\n                modals: newModals\n            });\n        });\n        PubSub.subscribe(Constants.STATION_SELECT, () => this.removeModal('stationSelector'));\n        PubSub.subscribe(Constants.STATION_SELECT_CLOSE, () => this.removeModal('stationSelector'));\n    }\n\n    removeModal(modalKey) {\n        const newModals = this.state.modals.filter(element => element.key !== modalKey);\n\n        if (!newModals.length) {\n            this.unlockScrolling();\n        }\n\n        this.setState({\n            modals: newModals\n        });\n    }\n\n    lockScrolling() {\n        document.getElementsByTagName('body')[0].style.overflow = 'hidden';\n    }\n\n    unlockScrolling() {\n        document.getElementsByTagName('body')[0].style.overflow = '';\n    }\n\n    render() {\n        if (this.state.modals.length) {\n            this.lockScrolling();\n        }\n\n        return (\n            <div>\n                {this.state.modals}\n            </div>\n        );\n    }\n}\n\nexport default Modal;\n","import { h, render } from 'preact';\n\nimport '../styles/main.css';\n\nimport Weather from './views/Weather';\nimport Tube from './views/Tube';\nimport Rail from './views/Rail';\nimport Modal from './components/Modal';\n\nimport PubSub from './services/PubSub';\nimport Constants from './services/Constants';\n\nconst Root = () => (\n    <div className=\"container\">\n        <Modal />\n        <div className=\"title\" onClick={() => PubSub.publish(Constants.REFRESH)}>Rdy.Today</div>\n        <Weather />\n        <br />\n        <Rail />\n        <br />\n        <Tube />\n    </div>\n);\n\nrender(<Root />, document.getElementById('main'), document.getElementById('main').lastChild);\n"]}